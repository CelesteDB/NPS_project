library(fastDummies)
# USERS : Levels: Civil Commercial Government Military
dummy_data <- dummy_cols(data, select_columns = "Users", remove_first_dummy = TRUE)
# PURPOSE : Levels: Communications Earth Observation Navigation Space Science Technology Development
dummy_data <- dummy_cols(dummy_data, select_columns = "Purpose", remove_first_dummy = TRUE)
# ORBIT : Levels: Elliptical GEO LEO MEO
dummy_data <- dummy_cols(dummy_data, select_columns = "Orbit", remove_first_dummy = TRUE)
# CONTINENT: Levels: Africa Americas Asia Europe Multinational Oceania
dummy_data <- dummy_cols(dummy_data, select_columns = "Continent", remove_first_dummy = TRUE)
# dataset senza Purpose, Users, Continent and Orbit
dummy_data <- dummy_data[,c(1:2,6:17,19:33)]
library(glmnet)
time <- dummy_data$`Effective Lifetime`
status <- dummy_data$Status
covariates <-
c(
"Longitude of GEO" ,
"Perigee" ,
"Apogee",
"Eccentricity" ,
"Inclination",
"Period",
"Mass",
"Users_Commercial",
"Users_Government",
"Users_Military",
"Purpose_Earth Observation",
"Purpose_Navigation",
"Purpose_Space Science",
"Purpose_Technology Development",
"Orbit_GEO",
"Orbit_LEO",
"Orbit_MEO",
"Continent_Americas",
"Continent_Asia",
"Continent_Europe",
"Continent_Multinational",
"Continent_Oceania"
)
n_coef = length(covariates)
lambda.grid <- 10^seq(2, -5 ,length = 100)
# Adatta un modello di regressione di Cox penalizzato usando glmnet
# alpha = 1 per la penalizzazione L2 (Ridge)
# alpha = 0 per la penalizzazione L1 (Lasso)
cox_model <- cv.glmnet(x = as.matrix(dummy_data[,covariates]), y = Surv(time,status == 'retired'), family = "cox", alpha = 0.2, lambda = lambda.grid)
# PROVA A CAMBIARE VALORE DI ALPHA ---> ELASTIC NET FORSE è MEGLIO
print(cox_model)
bestlambda <- cox_model$lambda.min # con lasso lambda è quasi zero
plot(cox_model)
abline(v=log(bestlambda), lty=1)
fitAtLmin <- glmnet(x = as.matrix(dummy_data[,covariates]),  y = Surv(time,status == 'retired') ,family="cox",lambda=bestlambda)
coef <- coef(fitAtLmin)
time <- dummy_data$`Effective Lifetime`
Status <- dummy_data$Status
variable_sel <-c(  # con coef != 0
"Perigee",
"Apogee",
"Inclination",
"Mass",
"Users_Commercial",
"Users_Government",
"Purpose_Earth Observation",
"Purpose_Navigation",
"Purpose_Space Science",
"Purpose_Technology Development",
"Continent_Americas",
"Continent_Asia",
"Continent_Multinational"
)
cox1 <- coxph(Surv(time, Status == 'retired') ~ . , data = dummy_data[,variable_sel])
summary(cox1)
time <- dummy_data$`Effective Lifetime`
Status <- dummy_data$Status
variable_sel <-c(  # con coef != 0
"Perigee",
"Apogee",
"Inclination",
"Mass",
"Users_Commercial",
"Users_Government",
"Purpose_Earth Observation",
"Purpose_Space Science",
"Purpose_Technology Development",
"Continent_Americas",
"Continent_Asia",
"Continent_Multinational"
)
cox2 <- coxph(Surv(time, Status == 'retired') ~ . , data = dummy_data[,variable_sel])
summary(cox2)
time <- dummy_data$`Effective Lifetime`
Status <- dummy_data$Status
variable_sel <-c(  # con coef != 0
"Perigee",
"Apogee",
"Mass",
"Users_Commercial",
"Users_Government",
"Purpose_Earth Observation",
"Purpose_Space Science",
"Purpose_Technology Development",
"Continent_Americas",
"Continent_Asia",
"Continent_Multinational"
)
cox3 <- coxph(Surv(time, Status == 'retired') ~ . , data = dummy_data[,variable_sel])
summary(cox3)
time <- dummy_data$`Effective Lifetime`
Status <- dummy_data$Status
variable_sel <-c(  # con coef != 0
"Perigee",
"Apogee",
"Mass",
"Users_Commercial",
"Users_Government",
"Purpose_Earth Observation",
"Purpose_Space Science",
"Purpose_Technology Development",
"Continent_Americas",
"Continent_Multinational"
)
cox4 <- coxph(Surv(time, Status == 'retired') ~ . , data = dummy_data[,variable_sel])
summary(cox4)
time <- dummy_data$`Effective Lifetime`
Status <- dummy_data$Status
variable_sel <-c(  # con coef != 0
"Perigee",
"Apogee",
"Mass",
"Users_Commercial",
"Users_Government",
"Purpose_Earth Observation",
"Purpose_Space Science",
"Purpose_Technology Development",
"Continent_Americas"    )
cox5 <- coxph(Surv(time, Status == 'retired') ~ . , data = dummy_data[,variable_sel])
summary(cox5)
time <- dummy_data$`Effective Lifetime`
Status <- dummy_data$Status
variable_sel <-c(  # con coef != 0
"Perigee",
"Apogee",
"Mass",
"Users_Commercial",
"Users_Government",
"Purpose_Space Science",
"Purpose_Technology Development",
"Continent_Americas"    )
cox6 <- coxph(Surv(time, Status == 'retired') ~ . , data = dummy_data[,variable_sel])
summary(cox6)
time <- dummy_data$`Effective Lifetime`
Status <- dummy_data$Status
variable_sel <-c(  # con coef != 0
"Perigee",
"Apogee",
"Mass",
"Users_Commercial",
"Users_Government",
"Purpose_Space Science",
"Continent_Americas"    )
cox7 <- coxph(Surv(time, Status == 'retired') ~ . , data = dummy_data[,variable_sel])
summary(cox7)
test <- cox.zph(cox7)
test
# Residui
ggcoxdiagnostics(cox7, type = "scaledsch")
time <- dummy_data$`Effective Lifetime`
Status <- dummy_data$Status
variable_sel <-c(  # con coef != 0
"Perigee",
"Apogee",
"Mass",
"Users_Commercial",
"Users_Government",
"Purpose_Space Science",
"Continent_Americas"    )
cox7 <- coxph(Surv(time, Status == 'retired') ~ strata(Perigee) + Apogee + Mass +Users_Commercial+  Users_Government +
dummy_data$`Purpose_Earth Observation` + Continent_Americas, data = dummy_data)
summary(cox7)
time <- dummy_data$`Effective Lifetime`
Status <- dummy_data$Status
variable_sel <- c(
# con coef != 0
'Longitude of GEO',
'Users_Commercial',
'Users_Government',
'Purpose_Space Science',
'Orbit_GEO',
'Continent_Americas',
'Continent_Multinational',
'Mass.disc_heavy',
'Pe.disc_medium'
)
cox9 <-
coxph(
Surv(time, Status == 'retired') ~ dummy_data$`Longitude of GEO` + Users_Commercial + strata(Users_Government) + dummy_data$`Purpose_Space Science` + strata(Orbit_GEO) + Continent_Americas + Continent_Multinational + Mass.disc_heavy +                                           Pe.disc_medium , data = dummy_data)
#install.packages("fastDummies")
library(fastDummies)
# USERS : Levels: Civil Commercial Government Military
dummy_data <- dummy_cols(data, select_columns = "Users", remove_first_dummy = TRUE)
# PURPOSE : Levels: Communications Earth Observation Navigation Space Science Technology Development
dummy_data <- dummy_cols(dummy_data, select_columns = "Purpose", remove_first_dummy = TRUE)
# ORBIT : Levels: Elliptical GEO LEO MEO
dummy_data <- dummy_cols(dummy_data, select_columns = "Orbit", remove_first_dummy = TRUE)
# CONTINENT: Levels: Africa Americas Asia Europe Multinational Oceania
dummy_data <- dummy_cols(dummy_data, select_columns = "Continent", remove_first_dummy = TRUE)
# dataset senza Purpose, Users, Continent and Orbit
dummy_data <- dummy_data[,c(1:2,6:17,19:33)]
View(dummy_data)
# MASS: Levels: light heavy
dummy_data <- dummy_cols(dummy_data, select_columns = "Mass.disc", remove_first_dummy = TRUE)
Massa.disc <- cut(data$Mass, breaks=c(0, 1000, Inf), labels=c("light", "heavy"))
dummy_data$Mass.disc <- Massa.disc
Per.disc <- cut(data$Period, breaks=c(0, 500, 1000, Inf), labels=c("short", "medium", "long"))
dummy_data$Per.disc <- Per.disc
Inc.disc <- cut(data$Inclination, breaks=c(-Inf, 40, 70, Inf), labels=c("low", "medium", "high"))
dummy_data$Inc.disc <- Inc.disc
Ap.disc <- cut(data$Apogee, breaks=c(0, 25000, Inf), labels=c("low", "high"))
dummy_data$Ap.disc <- Ap.disc
Pe.disc <- cut(data$Perigee, breaks=c(0, 5000, 25000, Inf), labels=c("low","medium","high"))
dummy_data$Pe.disc <- Pe.disc
# MASS: Levels: light heavy
dummy_data <- dummy_cols(dummy_data, select_columns = "Mass.disc", remove_first_dummy = TRUE)
# PERIOD: Levels: short medium long
dummy_data <- dummy_cols(dummy_data, select_columns = "Per.disc", remove_first_dummy = TRUE)
# INCLINATION: Levels: low medium high
dummy_data <- dummy_cols(dummy_data, select_columns = "Inc.disc", remove_first_dummy = TRUE)
# PERIGEE: Levels: low medium high
dummy_data <- dummy_cols(dummy_data, select_columns = "Pe.disc", remove_first_dummy = TRUE)
# APOGEE: Levels: low high
dummy_data <- dummy_cols(dummy_data, select_columns = "Ap.disc", remove_first_dummy = TRUE)
# dataset senza Purpose, Users, Continent, Orbit, Mass, Period,  Inclination, Apogee and Perigee
dummy_data <- dummy_data[,c(1:3,6,9:12, 15:29, 35:42)]
time <- dummy_data$`Effective Lifetime`
Status <- dummy_data$Status
variable_sel <- c(
# con coef != 0
'Longitude of GEO',
'Users_Commercial',
'Users_Government',
'Purpose_Space Science',
'Orbit_GEO',
'Continent_Americas',
'Continent_Multinational',
'Mass.disc_heavy',
'Pe.disc_medium'
)
cox9 <-
coxph(
Surv(time, Status == 'retired') ~ dummy_data$`Longitude of GEO` + Users_Commercial + strata(Users_Government) + dummy_data$`Purpose_Space Science` + strata(Orbit_GEO) + Continent_Americas + Continent_Multinational + Mass.disc_heavy +                                           Pe.disc_medium , data = dummy_data)
summary(cox9)
test <- cox.zph(cox9)
test
# Residui
ggcoxdiagnostics(cox9, type = "scaledsch")
ggforest(cox9, data=dummy_data)
time <- dummy_data$`Effective Lifetime`
Status <- dummy_data$Status
variable_sel <- c(
# con coef != 0
'Longitude of GEO',
'Users_Commercial',
'Users_Government',
'Purpose_Space Science',
'Orbit_GEO',
'Continent_Americas',
'Continent_Multinational',
'Mass.disc_heavy',
'Pe.disc_medium'
)
cox9 <-
coxph(
Surv(time, Status == 'retired') ~ dummy_data$`Longitude of GEO` + Users_Commercial + Users_Government + dummy_data$`Purpose_Space Science` + strata(Orbit_GEO) + Continent_Americas + Continent_Multinational + Mass.disc_heavy +                                           Pe.disc_medium , data = dummy_data)
summary(cox9)
ggforest(cox9, data=dummy_data)
ggforest(cox9, data=dummy_data[,variable_sel])
time <- dummy_data$`Effective Lifetime`
Status <- dummy_data$Status
variable_sel <- c(
# con coef != 0
'Longitude of GEO',
'Users_Commercial',
'Users_Government',
'Purpose_Space Science',
'Orbit_GEO',
'Continent_Americas',
'Continent_Multinational',
'Mass.disc_heavy',
'Pe.disc_medium'
)
cox9 <- coxph(Surv(time, Status == 'retired') ~ . , data = dummy_data[,variable_sel])
summary(cox9)
ggforest(cox9, data=dummy_data[,variable_sel])
plot(predict(cox9), residuals(cox9, type='martingale'),
xlab='Fitted values', ylab='Martingale residuals', main='Residual Plot', las=1)
# Add a line for residual=0
abline(h=0, col='red')
# Fit a smoother for the points
lines(smooth.spline(predict(cox9), residuals(cox9, type='martingale')), col='blue')
ggcoxdiagnostics(cox9, type = "deviance")
time <- dummy_data$`Effective Lifetime`
Status <- dummy_data$Status
variable_sel <- c(
# con coef != 0
'Longitude of GEO',
'Users_Commercial',
'Users_Government',
'Purpose_Space Science',
'Orbit_GEO',
'Continent_Americas',
'Continent_Multinational',
'Mass.disc_heavy',
'Pe.disc_medium'
)
cox9 <-
coxph(
Surv(time, Status == 'retired') ~ dummy_data$`Longitude of GEO` + Users_Commercial + strata(Users_Government) + dummy_data$`Purpose_Space Science` + strata(Orbit_GEO) + Continent_Americas + Continent_Multinational + Mass.disc_heavy +                                           Pe.disc_medium , data = dummy_data)
summary(cox9)
test <- cox.zph(cox9)
test
# Residui
ggcoxdiagnostics(cox9, type = "scaledsch")
ggcoxdiagnostics(cox9, type = "deviance")
```{r}
es <- data.frame(
'Longitude of GEO' = 0,
'Users_Commercial' = 1,
'Users_Government'= 0,
'Purpose_Space Science' = 1,
'Orbit_GEO' = 0,
'Continent_Americas'= 1,
'Continent_Multinational' = 0,
'Mass.disc_heavy' = 1,
'Pe.disc_medium' = 0
)
new_data <- with(ldummy_data, )
es
View(es)
fit
fit <- survfit(cox9, newdata = es)
es <- data.frame(
Longitude of GEO = 0,
fit <- survfit(cox9, newdata = dummy_data)
fit
print(fit)
median_survival_time <- quantile(fit, probs = 0.5)
print(median_survival_time)
new_dataset <-
fit
?median
plot(fit)
#print(fit) # qui mi dà le nuove hazard function -> funzione del rischio di morte
library(survival)
library(tidyverse)
library(survminer)
# Ovarian Cancer Survival Data
tibble::glimpse(ovarian)
ovarian$rx <- factor(ovarian$rx)
ovarian$resid.ds <- factor(ovarian$resid.ds)
ovarian$ecog.ps <- factor(ovarian$ecog.ps)
fit_ovarian <- coxph(Surv(futime, fustat) ~ age + rx,
data=ovarian)
summary(fit_ovarian)
ggforest(fit_ovarian, data=ovarian)
#three curves for 3 patients of ages 50, 60, 70
# You can make inference on new data
new_ovarian_age <- data.frame(age = c(50,60,70),
resid.ds = factor(rep(2,3)),
rx = factor(c(1,1,1)),
ecog.ps = factor(rep(1,3)))
#predict new data
fit_rx_age <- survfit(fit_ovarian, newdata = new_ovarian_age)
View(fit_rx_age)
# Estimated adjusted survival curves:
plot(fit_rx_age, col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
legend('topright', c("Age = 50", "Age = 60", "Age = 70"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
View(fit_rx_age)
predictions <- predict(fit_ovarian)
plot(
predict(fit_ovarian),
residuals(fit_ovarian, type = 'martingale'),
xlab = 'Fitted values',
ylab = 'Martingale residuals',
main = 'Residual Plot',
las = 1
)
# Add a line for residual=0
abline(h=0, col='red')
# Fit a smoother for the points
lines(smooth.spline(predict(fit_ovarian), residuals(fit_ovarian, type='martingale')), col='blue')
# Alternatively
ggcoxdiagnostics(fit_ovarian, type = "martingale")
fit_ovarian$coefficients
fit_ovarian$coefficients[1]*ovarian$age[1] + fit_ovarian$coefficients[2]*ovarian$rx2[1]
fit_ovarian$coefficients[1]*ovarian$age[1] + fit_ovarian$coefficients[2]*ovarian$rx[1]
ovarian[1,]
fit_ovarian$coefficients[1]*ovarian$age[1]
predict(fit_ovarian, newdata = ovarian, type = "lp")[1]
fit_ovarian$coefficients
exp(fit_ovarian$coefficients[1])*ovarian$age[1]
fit_ovarian_2 <- coxph(Surv(futime, fustat) ~ age, data=ovarian)
fit_ovarian_2$coefficients
summary(fit_ovarian_2)
fit_ovarian_2$y
futime
ovarian$futime
fit_ovarian_2$score
fit_ovarian_2$linear.predictors
fit_ovarian_2$linear.predictors[1]
fit_ovarian_2$means
fit_ovarian_2$coefficients * ovarian$age[1]
exp(fit_ovarian_2$coefficients) * ovarian$age[1] #11.69021
exp(0.1616199)
summary(fit_ovarian_2)
predict(fit_ovarian_2)
exp(fit_ovarian_2$coefficients * ovarian$age[1]) #85.01941
fit_ovarian_2$coefficients * ovarian$age[1]
predict(fit_ovarian_2, type = 'expected')
predict(fit_ovarian_2, type = 'expected')[]
predict(fit_ovarian_2, type = 'expected')[1]
ovarian$age[1]
View(ovarian)
72.3315* 0.1616199
fit_ovarian_2$coefficients
fit_ovarian_2 <- coxph(Surv(futime, fustat) ~ age + 1, data=ovarian)
summary(fit_ovarian_2)
fit_ovarian_2$linear.predictors[1] #2.612756
exp(fit_ovarian_2$coefficients * ovarian$age[1]) #119396.7
fit_ovarian_2$coefficients * ovarian$age[1] #11.69021
predict(fit_ovarian_2)[1] #2.61275594
ovarian$age[1]
fit_ovarian_2$coefficients * (ovarian$age[1]-mean(ovarian$age) #11.69021
fit_ovarian_2$coefficients * (ovarian$age[1]-mean(ovarian$age)) #11.69021
predict(fit_ovarian_2)[1] #2.61275594
# Installa e carica il pacchetto coxed
install.packages("coxed")
library(coxed)
# Calcola la durata attesa per il satellite di interesse
expected_lifetime <- coxed::coxed(fit_ovarian_2, newdata = ovarian, type = "expected")
View(expected_lifetime)
View(ovarian)
predict(fit_ovarian_2, type = 'expected')[1] #0.1643439
# Calcola la durata attesa per il satellite di interesse
expected_lifetime <- coxed::coxed(fit_ovarian_2, newdata = ovarian, type = "expected")
expected_lifetime$exp.dur
View(ovarian)
predict(fit_ovarian_2, type = 'expected')
predict(fit_ovarian_2, type = 'expected', data = data)[1] #0.1643439
predict(fit_ovarian_2, type = 'expected', data = ovarian) #0.1643439
ed1 <- coxed(fit_ovarian_2, method="npsf")
View(fit_rx_age)
head(ed1$exp.dur)
ed1$baseline.functions$cbh
-log(ed1$baseline.functions$survivor)
ed1 <- coxed(fit_ovarian_2, method="npsf", bootstrap = TRUE, B=30)
head(ed1$exp.dur)
fit.cox <- survfit(fit_ovarian_2, newdata = ovarian)
fit.cox
#three curves for 3 patients of ages 50, 60, 70
# You can make inference on new data
new_ovarian_age <- data.frame(age = c(50,60,70),
resid.ds = factor(rep(2,3)),
rx = factor(c(1,1,1)),
ecog.ps = factor(rep(1,3)))
#predict new data
fit_rx_age <- survfit(fit_ovarian, newdata = new_ovarian_age)
# Estimated adjusted survival curves:
plot(fit_rx_age, col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
legend('topright', c("Age = 50", "Age = 60", "Age = 70"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
fit.cox <- survfit(fit_ovarian_2, newdata = ovarian)
fit.cox
fit.cox <- survfit(fit_ovarian_2, newdata = ovarian)
summary(fit.cox)
pred <- predict(cox.age)
pred <- predict(cox.age, type = 'expected')
pred <- predict(fit_ovarian_2, type = 'expected')
pred
summary(pred)
pred
fit_ovarian_2
fit_ovarian_2$assign
fit_ovarian_2$timefix
summary(fit_ovarian_2)
ggforest(fit_ovarian_2, data=ovarian)
fit_rx_age <- survfit(fit_ovarian, newdata = new_ovarian_age)
# Estimated adjusted survival curves:
plot(fit_rx_age, col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
legend('topright', c("Age = 50", "Age = 60", "Age = 70"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
predict(fit_ovarian)
predict(fit_ovarian_2)
residuals(fit_ovarian, type = 'martingale')
plot(
predict(fit_ovarian_2),
residuals(fit_ovarian, type = 'martingale'),
xlab = 'Fitted values',
ylab = 'Martingale residuals',
main = 'Residual Plot',
las = 1
)
ed1 <- coxed(fit_ovarian_2, method="npsf", bootstrap = TRUE, B=1000)
ed1 <- coxed(fit_ovarian_2, method="npsf", bootstrap = TRUE, B=500)
head(ed1$exp.dur)
ed1 <- coxed(fit_ovarian_2, method="npsf", bootstrap = TRUE, B=750)
head(ed1$exp.dur)
