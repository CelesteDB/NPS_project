summary(cox3bis)
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c( "Perigee", 'Eccentricity', "Inclination", "Period", "Mass", "Users_Commercial", "Users_Government", "Users_Military", "Purpose_Earth Observation","Purpose_Space Science", "Continent_Asia", "Continent_Europe", "Orbit_LEO")
cox3bis <- coxph(Surv(time,status == 'retired') ~ Perigee + Eccentricity + Inclination + Period + Mass + Users_Commercial + Users_Government + Users_Military + strata(dummy_data$`Purpose_Earth Observation`) + dummy_data$`Purpose_Space Science`+ Continent_Asia + Continent_Europe + Orbit_LEO, data = dummy_data)
summary(cox3bis)
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c( "Perigee", 'Eccentricity', "Inclination", "Period", "Mass", "Users_Commercial", "Users_Government", "Users_Military", "Purpose_Earth Observation","Purpose_Space Science", "Continent_Asia", "Continent_Europe", "Orbit_LEO")
cox4bis <- coxph(Surv(time,status == 'retired') ~ Perigee + Eccentricity  + Period + Mass + Users_Commercial + Users_Government + Users_Military + strata(dummy_data$`Purpose_Earth Observation`) + dummy_data$`Purpose_Space Science`+ Continent_Asia + Continent_Europe + Orbit_LEO, data = dummy_data)
summary(cox4bis)
test <- cox.zph(cox3bis)
test
test <- cox.zph(cox4bis)
test
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c( "Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users_Commercial", "Users_Government", "Users_Military", "Purpose_Earth Observation", "Purpose_Technology Development", "Continent_Asia", "Continent_Europe", "Orbit_LEO")
cox5 <- coxph(Surv(time,status == 'retired') ~ Apogee + Eccentricity + Period + Mass + Users_Commercial + Users_Government + Users_Military + strata(dummy_data$`Purpose_Earth Observation`) + dummy_data$`Purpose_Technology Development` + Continent_Asia + Continent_Europe + strata(Orbit_LEO), data = dummy_data)
summary(cox5)
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c( "Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users_Commercial", "Users_Government", "Users_Military", "Purpose_Earth Observation", "Purpose_Technology Development", "Continent_Asia", "Continent_Europe", "Orbit_LEO")
cox5 <- coxph(Surv(time,status == 'retired') ~ Apogee + Eccentricity  + Mass + Users_Commercial + Users_Government + Users_Military + strata(dummy_data$`Purpose_Earth Observation`) + dummy_data$`Purpose_Technology Development` + Continent_Asia + Continent_Europe + strata(Orbit_LEO), data = dummy_data)
summary(cox5)
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c( "Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users_Commercial", "Users_Government", "Users_Military", "Purpose_Earth Observation", "Purpose_Technology Development", "Continent_Asia", "Continent_Europe", "Orbit_LEO")
cox7 <- coxph(Surv(time,status == 'retired') ~ Apogee + Eccentricity  + Mass + Users_Commercial + Users_Government + Users_Military + strata(dummy_data$`Purpose_Earth Observation`) + dummy_data$`Purpose_Technology Development` + Continent_Asia + Continent_Europe + strata(Orbit_LEO), data = dummy_data)
summary(cox7)
test <- cox.zph(cox7)
test
library(readxl)
data <- read_excel("../Dataset/TrainingSet.xlsx", col_names = TRUE)
library(readxl)
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
library(knitr)
library(broom)
library(tidyr)
summary(data)
table(data$Users, data$Status)
table(data$Purpose, data$Status)
table(data$Orbit, data$Status)
table(data$Continent, data$Status)
i <- which(data$Purpose == 'Navigation' | data$Orbit == 'Elliptical' | data$Continent == 'Africa' | data$Continent == 'Multinational' | data$Continent == 'Oceania' )
data <- data[-i,]
table(data$Users, data$Status)
table(data$Purpose, data$Status)
table(data$Orbit, data$Status)
table(data$Continent, data$Status)
table(data$Status)
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
cox1 <- coxph(Surv(time,status == 'retired') ~ ., data = data[,covariates])
summary(cox1)
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c("Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
cox2 <- coxph(Surv(time,status == 'retired') ~ ., data = data[,covariates])
summary(cox2)
test <- cox.zph(cox2)
test
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c("Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
cox2 <- coxph(Surv(time,status == 'retired') ~ Apogee + Eccentricity + Inclination + Period +
Mass + Users + strata(Purpose) + Continet + Orbit, data = data[,covariates])
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c("Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
cox2 <- coxph(Surv(time,status == 'retired') ~ Apogee + Eccentricity + Inclination + Period +
Mass + Users + strata(Purpose) + Continent + Orbit, data = data)
summary(cox2)
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c("Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
cox3 <- coxph(Surv(time,status == 'retired') ~ Apogee + Eccentricity + Inclination + Period +
Mass + Users + strata(Purpose) + Continent + Orbit, data = data)
summary(cox3)
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
cox1 <- coxph(Surv(time,status == 'retired') ~ ., data = data[,covariates])
summary(cox1)
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c("Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
cox3 <- coxph(Surv(time,status == 'retired') ~ Perigee + Apogee + Eccentricity + Inclination + Period +
Mass + Users + strata(Purpose) + Continent + Orbit, data = data)
summary(cox3)
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c("Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
cox2 <- coxph(Surv(time,status == 'retired') ~ Apogee + Eccentricity + Inclination + Period +
Mass + Users + strata(Purpose) + Continent + Orbit, data = data)
summary(cox2)
time <- data$`Effective Lifetime`
status <- data$Status
cox2 <- coxph(Surv(time,status == 'retired') ~ Perigee + Apogee + Eccentricity + Inclination + Period +
Mass + Users + strata(Purpose) + Continent + Orbit, data = data)
summary(cox2)
test <- cox.zph(cox2)
test
time <- data$`Effective Lifetime`
status <- data$Status
cox2 <- coxph(Surv(time,status == 'retired') ~ Perigee + Apogee + Eccentricity + Inclination + Period +
Mass + Users + strata(Purpose) + Continent , data = data)
summary(cox2)
time <- data$`Effective Lifetime`
status <- data$Status
cox2 <- coxph(Surv(time,status == 'retired') ~ Perigee + Apogee + Eccentricity + Inclination + Period +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox2)
time <- data$`Effective Lifetime`
status <- data$Status
cox4<- coxph(Surv(time,status == 'retired') ~  Apogee + Eccentricity + Inclination + Period +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox4)
time <- data$`Effective Lifetime`
status <- data$Status
cox3<- coxph(Surv(time,status == 'retired') ~ Perigee + Apogee + Eccentricity + Inclination + Period +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3)
summary(cox5)
time <- data$`Effective Lifetime`
status <- data$Status
cox5<- coxph(Surv(time,status == 'retired') ~  Apogee + Eccentricity + Inclination  +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox5)
time <- data$`Effective Lifetime`
status <- data$Status
cox6<- coxph(Surv(time,status == 'retired') ~  Apogee + Eccentricity   +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox6)
test <- cox.zph(cox6)
test
plot(predict(cox6), residuals(cox6, type='martingale'),
xlab='Fitted values', ylab='Martingale residuals', main='Residual Plot', las=1)
# Add a line for residual=0
abline(h=0, col='red')
# Fit a smoother for the points
ggcoxdiagnostics(cox6, type = "scaledsch")
-log(data$Eccentricity)
data$Eccentricity
i <- which(data$Eccentricity == 0)
i <- which(data$Eccentricity == 0)
data$Eccentricity[i] = 1
data$Eccentricity <- -log(data$Eccentricity)
data$Eccentricity
i <- which(data$Eccentricity == 0)
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
cox1 <- coxph(Surv(time,status == 'retired') ~ ., data = data[,covariates])
summary(cox1)
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
cox1bis <- coxph(Surv(time,status == 'retired') ~ ., data = data[,covariates])
summary(cox1bis)
summary(cox2bis)
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c("Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
cox2bis <- coxph(Surv(time,status == 'retired') ~ ., data = data[,covariates])
summary(cox2bis)
time <- data$`Effective Lifetime`
status <- data$Status
cox2bis <- coxph(Surv(time,status == 'retired') ~  Apogee + Eccentricity + Inclination + Period +
Mass + Users + strata(Purpose) + Continent + Orbit, data = data)
summary(cox2bis)
time <- data$`Effective Lifetime`
status <- data$Status
cox3bis <- coxph(Surv(time,status == 'retired') ~  Apogee + Eccentricity  + Period +
Mass + Users + strata(Purpose) + Continent + Orbit, data = data)
summary(cox3bis)
test <- cox.zph(cox3bis)
test
summary(cox4bis)
time <- data$`Effective Lifetime`
status <- data$Status
cox4bis <- coxph(Surv(time,status == 'retired') ~  Apogee + Eccentricity  + Period +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox4bis)
time <- data$`Effective Lifetime`
status <- data$Status
cox5bis <- coxph(Surv(time,status == 'retired') ~  Apogee + Eccentricity  + Period +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox5bis)
time <- data$`Effective Lifetime`
status <- data$Status
cox5bis <- coxph(Surv(time,status == 'retired') ~  Apogee + Eccentricity   +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox5bis)
test <- cox.zph(cox5bis)
test
ggcoxdiagnostics(cox5bis, type = "scaledsch")
plot(predict(cox5bis), residuals(cox5, type='martingale'),
xlab='Fitted values', ylab='Martingale residuals', main='Residual Plot', las=1)
# Add a line for residual=0
abline(h=0, col='red')
# Fit a smoother for the points
data$log.Eccentricity <- -log(data$Eccentricity)
View(data)
library(readxl)
data <- read_excel("../Dataset/TrainingSet.xlsx", col_names = TRUE)
i <- which(data$Purpose == 'Navigation' | data$Orbit == 'Elliptical' | data$Continent == 'Africa' | data$Continent == 'Multinational' | data$Continent == 'Oceania' )
data <- data[-i,]
i <- which(data$Eccentricity == 0)
data$Eccentricity[i] = 1
data$log.Eccentricity <- -log(data$Eccentricity)
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c( "Perigee" ,"Apogee", 'log.Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
cox1bis <- coxph(Surv(time,status == 'retired') ~ ., data = data[,covariates])
summary(cox1bis)
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c("Apogee", 'log.Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
cox2bis <- coxph(Surv(time,status == 'retired') ~ ., data = data[,covariates])
summary(cox2bis)
time <- data$`Effective Lifetime`
status <- data$Status
cox2bis <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity + Inclination + Period +
Mass + Users + strata(Purpose) + Continent + Orbit, data = data)
summary(cox2bis)
time <- data$`Effective Lifetime`
status <- data$Status
cox3bis <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity  + Period +
Mass + Users + strata(Purpose) + Continent + Orbit, data = data)
summary(cox3bis)
test <- cox.zph(cox3bis)
test
time <- data$`Effective Lifetime`
status <- data$Status
cox4bis <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity  + Period +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox4bis)
time <- data$`Effective Lifetime`
status <- data$Status
cox5bis <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity   +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox5bis)
test <- cox.zph(cox5bis)
test
ggcoxdiagnostics(cox5bis, type = "scaledsch")
plot(predict(cox5bis), residuals(cox5bis, type='martingale'),
xlab='Fitted values', ylab='Martingale residuals', main='Residual Plot', las=1)
# Add a line for residual=0
abline(h=0, col='red')
# Fit a smoother for the points
plot(log.Eccentricity, residuals(cox5bis, type='martingale'),
xlab='Fitted values', ylab='Martingale residuals', main='Residual Plot', las=1)
plot(data$log.Eccentricity, residuals(cox5bis, type='martingale'),
xlab='Fitted values', ylab='Martingale residuals', main='Residual Plot', las=1)
# Add a line for residual=0
abline(h=0, col='red')
# Fit a smoother for the points
ggcoxdiagnostics(mod.cox, type = "martingale")
ggcoxdiagnostics(cox5bis, type = "martingale")
ggcoxdiagnostics(cox5bis, type = "deviance")
library(readxl)
data <- read_excel("../Dataset/TrainingSet.xlsx", col_names = TRUE)
library(readxl)
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
library(knitr)
library(broom)
library(tidyr)
table(data$Users, data$Status)
table(data$Purpose, data$Status)
table(data$Orbit, data$Status)
table(data$Continent, data$Status)
i <- which(data$Purpose == 'Navigation' | data$Orbit == 'Elliptical' | data$Continent == 'Africa' | data$Continent == 'Multinational' | data$Continent == 'Oceania' )
data <- data[-i,]
table(data$Users, data$Status)
table(data$Purpose, data$Status)
table(data$Orbit, data$Status)
table(data$Continent, data$Status)
table(data$Status)
time <- data$`Effective Lifetime`
status <- data$Status
cox6<- coxph(Surv(time,status == 'retired') ~  Apogee + Eccentricity   +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox6)
test <- cox.zph(cox6)
test
ggcoxdiagnostics(cox6, type = "martingales")
ggcoxdiagnostics(cox6, type = "martingale")
ggcoxdiagnostics(cox6, type = "deviance")
AIC.cox6 = AIC(cox6)
i <- which(data$Eccentricity == 0)
data$Eccentricity[i] = 1
data$log.Eccentricity <- -log(data$Eccentricity)
time <- data$`Effective Lifetime`
status <- data$Status
cox5bis <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity   +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox5bis)
test <- cox.zph(cox5bis)
test
ggcoxdiagnostics(cox5bis, type = "scaledsch")
ggcoxdiagnostics(cox5bis, type = "martingale")
ggcoxdiagnostics(cox5bis, type = "deviance")
AIC.coxbis5 = AIC(coxbis5)
AIC.cox5bis = AIC(cox5bis)
ggforest(cox5bis, data=lung)
ggforest(cox5bis, data)
cov <- c(Apogee , log.Eccentricity ,  Mass , Users , Continent )
cov <- c("Apogee" , "log.Eccentricity" ,  "Mass" , "Users" , "Continent" )
ggforest(cox5bis, data= data[,cov])
cov <- c("Apogee" , "log.Eccentricity" ,  "Mass" , "Users" , "Continent" )
ggforest(cox5, data= data[,cov])
cov <- c("Apogee" , "log.Eccentricity" ,  "Mass" , "Users" , "Continent" )
ggforest(cox6, data= data[,cov])
cov <- c("Apogee" , "log.Eccentricity" ,  "Mass" , "Users" , "Continent" )
prova <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity   +
Mass + Users + Continent , data = data)
summary(prova)
ggforest(prova)
cov <- c("Apogee" , "log.Eccentricity" ,  "Mass" , "Users" , "Continent" )
prova <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity   +
Mass + Users + Continent , data = data)
summary(prova)
ggforest(prova, data = data)
time <- data$`Effective Lifetime`
status <- data$Status
cox5bis <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity   +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox5bis)
library(coxed)
ed1 <- coxed(cox5bis, method="npsf")
predlife=ed1$exp.dur
#mean and median of the predicted durations:
ed1$mean
ed1$median
# PLOT: The estimated cumulative baseline hazard function and survivor function
baseline <- gather(ed1$baseline.functions, cbh, survivor, key="survivefunction", value="value")
ggplot(baseline, aes(x=time, y=value)) +
geom_line() +
xlab("Time") +
ylab("Function") +
facet_wrap( ~ survivefunction, scales = "free")
test.set<-  read_excel("../Dataset/TestSet", col_names = TRUE)
test.set<-  read_excel("../Dataset/TestSet", col_names = TRUE)
getwd()
test.set <- read_excel("../Dataset/TestSet", col_names = TRUE)
test.set <- read_excel("../Dataset/TestSet.xlsx", col_names = TRUE)
i <- which(data$Purpose == 'Navigation' | data$Orbit == 'Elliptical' | data$Continent == 'Africa' | data$Continent == 'Multinational' | data$Continent == 'Oceania' )
data <- data[-i,]
i <- which(test.set$Purpose == 'Navigation' | test.set$Orbit == 'Elliptical' | test.set$Continent == 'Africa' | test.set$Continent == 'Multinational' | test.set$Continent == 'Oceania' )
test.set <- test.set[-i,]
table(test.set$Users, test.set$Status)
table(test.set$Purpose, test.set$Status)
table(test.set$Orbit, test.set$Status)
table(test.set$Continent, test.set$Status)
table(test.set$Status)
i <- which(test.set$Eccentricity == 0)
test.set$Eccentricity[i] = 1
test.set$log.Eccentricity <- -log(test.set$Eccentricity)
names(test.set)
names(test.set)
pred <- coxed(cox5bis, newdata=test.set, method="npsf") #ERRORE: LUNGHEZZE DIFFERISCONO. ???????
names(test.set) == names(test)
pred <- coxed(cox5bis, newdata=test.set, method="npsf") #ERRORE: LUNGHEZZE DIFFERISCONO. ???????
names(test.set) == names(data)
pred <- coxed(cox5bis, newdata=test.set, method="npsf") #ERRORE: LUNGHEZZE DIFFERISCONO. ???????
pred <- coxed(cox5bis, newdata=test.set, method="npsf") #ERRORE: LUNGHEZZE DIFFERISCONO. ???????
mv.surv <- Surv(martinvanberg$formdur, event = rep(1, nrow(martinvanberg)))
mv.cox <- coxph(mv.surv ~ postel + prevdef + cont + ident + rgovm + pgovno +
tpgovno + minority, method = "breslow", data = martinvanberg)
summary(mv.cox)
# NPSF method
ed1 <- coxed(mv.cox, method="npsf")
ed1$baseline.functions
ed1$exp.dur
summary(ed1, stat="mean")
summary(ed1, stat="median")
ed1$exp.dur
summary(ed1, stat="mean")
summary(ed1, stat="median")
me <- coxed(mv.cox, method="npsf", bootstrap = FALSE,
newdata = dplyr::mutate(martinvanberg, pgovno=1),
newdata2 = dplyr::mutate(martinvanberg, pgovno=6))
summary(me, stat="mean")
dplyr::mutate(martinvanberg, pgovno=1)
newdata = dplyr::mutate(martinvanberg, pgovno=1)
newdata
martinvanberg
test.set
View(cox5bis)
time <- data$`Effective Lifetime`
status <- data$Status
prova <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity   +
Mass + Users + Purpose + Continent + Orbit, data = data)
View(data)
library(readxl)
data <- read_excel("../dataset/TrainingSet.xlsx", col_names = TRUE)
i <- which(data$Purpose == 'Navigation' | data$Orbit == 'Elliptical' | data$Continent == 'Africa' | data$Continent == 'Multinational' | data$Continent == 'Oceania' )
data <- data[-i,]
i <- which(data$Eccentricity == 0)
data$Eccentricity[i] = 1
data$log.Eccentricity <- -log(data$Eccentricity)
pred <- coxed(cox5bis, newdata=test.set, method="npsf") #ERRORE: LUNGHEZZE DIFFERISCONO. ???????
names(test.set) == names(data)
pred <- coxed(cox5bis, newdata=test.set, method="npsf") #ERRORE: LUNGHEZZE DIFFERISCONO. ???????
time <- data$`Effective Lifetime`
status <- data$Status
prova <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity +
Mass + Users + Purpose + Continent + Orbit, data = data)
summary(prova)
names(test.set) == names(data)
pred <- coxed(prova, newdata=test.set, method="npsf") #ERRORE: LUNGHEZZE DIFFERISCONO. ???????
pred <- coxed(prova, newdata=test.set, method="npsf", bootstrap=TRUE, B=1000)
pred$exp.dur
pred <- coxed(prova, newdata=test.set, method="npsf") #ERRORE: LUNGHEZZE DIFFERISCONO. ???????
predlife
pred
## S3 method for class 'coxph'
predict(cox5bis, test.set,
type=c("lp", "risk", "expected", "terms", "survival"),
se.fit=FALSE, na.action=na.pass, terms=names(object$assign), collapse,
reference=c("strata", "sample", "zero"),  ...)
## S3 method for class 'coxph'
predict(cox5bis, test.set,
type=c("lp", "risk", "expected", "terms", "survival"),
se.fit=FALSE, na.action=na.pass, terms=names(object$assign), collapse,
reference=c("strata", "sample", "zero"))
## S3 method for class 'coxph'
predict(cox5bis, test.set,
type=c("lp", "risk", "expected", "terms", "survival"),
se.fit=FALSE, na.action=na.pass, terms=names(cox5bis$assign), collapse,
reference=c("strata", "sample", "zero"))
## S3 method for class 'coxph'
predict(cox5bis, test.set,
type=c("lp", "risk", "expected", "terms", "survival"),
reference=c("strata", "sample", "zero"))
bashaz <- basehaz(cox5bis)
bashaz <- basehaz(cox5bis)
basehaz
bashaz <- basehaz(cox5bis)
bashaz
## S3 method for class 'coxph'
predict(cox5bis, test.set,
#type=c("lp", "risk", "expected", "terms", "survival"),
type = 'expected',
reference=c("strata", "sample", "zero"))
## S3 method for class 'coxph'
predict(cox5bis, test.set,
#type=c("lp", "risk", "expected", "terms", "survival"),
type = 'risk',
reference=c("strata", "sample", "zero"))
## S3 method for class 'coxph'
expLP = predict(cox5bis, test.set,
#type=c("lp", "risk", "expected", "terms", "survival"),
type = 'risk',
reference=c("strata", "sample", "zero"))
bashaz[, 1]
exp(-bashaz[, 1]*expLP)
table(bashaz)
table(bashaz$strata)
bashaz <- basehaz(cox5bis)
bashaz
table(bashaz$strata) # strataa su orbit e Purpose --> 8 combinazioni in teoria
# technology DEvelopment, Geo non esiste
table(test.set$Orbit, test.set$Purpose)
table(test.set$Orbit, test.set$Purpose)
bashaz
table(bashaz$strata) # strataa su orbit e Purpose --> 8 combinazioni in teoria
names(bashaz$strata)
bashaz
table(bashaz$strata) # strataa su orbit e Purpose --> 8 combinazioni in teoria
Bas.haz_COMMGEO <- data.frame(bashaz[which(strata == 'Communications, GEO'),1:2]
Bas.haz_COMMGEO <- data.frame(bashaz[which(strata == 'Communications, GEO'),1:2])
```{r}
Bas.haz_COMMGEO <- data.frame(bashaz[which(strata == 'Communications, GEO'),1:2])
bashaz
Bas.haz_COMMGEO <- data.frame(bashaz[which(strata == "Communications, GEO"),1:2])
bashaz <- basehaz(cox5bis, test.set)
bashaz
table(bashaz$strata) # strataa su orbit e Purpose --> 8 combinazioni in teoria
# technology DEvelopment, Geo non esiste
table(test.set$Orbit, test.set$Purpose)
# technology DEvelopment, Geo non esiste neanche nel test set -> buono
bashaz <- basehaz(cox5bis, test.set, centered=TRUE)
bashaz
table(bashaz$strata) # strataa su orbit e Purpose --> 8 combinazioni in teoria
# technology DEvelopment, Geo non esiste
table(test.set$Orbit, test.set$Purpose)
# technology DEvelopment, Geo non esiste neanche nel test set -> buono
bashaz.train <- basehaz(cox5bis)
bashaz.test <- basehaz(cox5bis, test.set, centered=TRUE)
bashaz.test
table(bashaz.train$strata) # strataa su orbit e Purpose --> 8 combinazioni in teoria
# technology DEvelopment, Geo non esiste
table(test.set$Orbit, test.set$Purpose)
# technology DEvelopment, Geo non esiste neanche nel test set -> buono
table(test.set$Orbit, test.set$Purpose)
bashaz.test <- basehaz(cox5bis, test.set, centered=TRUE)
bashaz.test
table(bashaz.test$strata)
# technology DEvelopment, Geo non esiste
table(test.set$Orbit, test.set$Purpose)
# technology DEvelopment, Geo non esiste neanche nel test set -> buono
ggcoxdiagnostics(cox5bis, type = "deviance")
ggcoxdiagnostics(cox5bis, type = "scaledsch")
