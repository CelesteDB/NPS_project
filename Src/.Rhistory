table(data$Status)
set.seed(123)
data <- data[sample(nrow(data)), ]
# Installa il pacchetto Hmisc se non Ã¨ giÃ  installato
#install.packages("Hmisc")
# Carica le librerie
library(Hmisc)
# Calcola la correlazione tra variabile numerica e categorica
cor_test_result <-
rcorr(
cbind(
data$`Longitude of GEO`,
data$Perigee,
data$Apogee,
data$Eccentricity,
data$Inclination,
data$Period,
data$Mass
),
type = "spearman"
)
# Estrai la tabella di correlazione
correlation_table <- cor_test_result$r
# Aggiungi i nomi delle variabili come colonna e riga
row.names(correlation_table) <- colnames(correlation_table) <-c('Longitude of GEO','Perigee','Apogee','Eccentricity','Inclination','Period','Mass')
# Stampa la tabella
print(correlation_table)
#install.packages("fastDummies")
library(fastDummies)
# USERS : Levels: Civil Commercial Government Military
dummy_data <- dummy_cols(data, select_columns = "Users", remove_first_dummy = TRUE)
# PURPOSE : Levels: Communications Earth Observation Navigation Space Science Technology Development
dummy_data <- dummy_cols(dummy_data, select_columns = "Purpose", remove_first_dummy = TRUE)
# ORBIT : Levels: Elliptical GEO LEO MEO
dummy_data <- dummy_cols(dummy_data, select_columns = "Orbit", remove_first_dummy = TRUE)
# CONTINENT: Levels: Africa Americas Asia Europe Multinational Oceania
dummy_data <- dummy_cols(dummy_data, select_columns = "Continent", remove_first_dummy = TRUE)
# dataset senza Purpose, Users, Continent and Orbit
dummy_data <- dummy_data[,c(1:2,6:15,17:31)]
View(dummy_data)
time <- dummy_data$`Effective Lifetime`
status <- dummy_data$Status
covariates <- c( "Perigee" ,  "Eccentricity", "Inclination", "Mass", "Users_Commercial", "Users_Government", "Users_Military", "Purpose_Earth Observation", "Purpose_Navigation", "Purpose_Space Science", "Purpose_Technology Development", "Continent_Americas", "Continent_Asia", "Continent_Europe", "Continent_Multinational", "Continent_Oceania")
n_coef <- length(covariates)
cox1 <- coxph(Surv(time,status == 'retired') ~ ., data = dummy_data[,covariates])
time <- dummy_data$`Effective Lifetime`
status <- dummy_data$Status
covariates <- c( "Perigee" ,  "Eccentricity", "Inclination", "Mass", "Users_Commercial", "Users_Government", "Users_Military", "Purpose_Earth Observation", "Purpose_Navigation", "Purpose_Space Science", "Purpose_Technology Development", "Continent_Americas", "Continent_Asia", "Continent_Europe", "Continent_Others")
n_coef <- length(covariates)
cox1 <- coxph(Surv(time,status == 'retired') ~ ., data = dummy_data[,covariates])
time <- dummy_data$`Effective Lifetime`
status <- dummy_data$Status
covariates <- c( "Perigee" ,  "Eccentricity", "Inclination", "Mass", "Users_Commercial", "Users_Government", "Users_Military", "Purpose_Earth Observation", "Purpose_Navigation", "Purpose_Space Science", "Purpose_Technology Development", "Continent_Asia", "Continent_Europe", "Continent_Others")
n_coef <- length(covariates)
cox1 <- coxph(Surv(time,status == 'retired') ~ ., data = dummy_data[,covariates])
summary(cox1)
View(dummy_data)
table(dummy_data$Purpose_Navigation)
# per lettura dataset se prendi file da github
library(readxl)
data <- read_excel("../Dataset/TrainingSet.xlsx", col_names = TRUE)
library(readxl)
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
library(knitr)
library(broom)
library(tidyr)
summary(data)
data$Continent[data$Continent == 'Africa'] <- 'Others'
data$Continent[data$Continent == 'Oceania'] <- 'Others'
data$Continent[data$Continent == 'Multinational'] <- 'Others'
data$Country <- factor(data$Country, ordered = F)
print('Country')
table(data$Country)
data$Continent <- factor(data$Continent, ordered = F)
print('Continent')
table(data$Continent)
data$Users <- factor(data$Users, ordered = F)
print('Users')
table(data$Users)
data$Purpose <- factor(data$Purpose, ordered = F)
print('Purpose')
table(data$Purpose)
data$Orbit <- factor(data$Orbit, ordered = F)
print('Class of Orbit')
table(data$Orbit)
data$Status <- factor(data$Status, ordered = F)
print('Status')
table(data$Status)
data <- data[,c(-8,-11)]
#install.packages("fastDummies")
library(fastDummies)
# USERS : Levels: Civil Commercial Government Military
dummy_data <- dummy_cols(data, select_columns = "Users", remove_first_dummy = FALSE)
# PURPOSE : Levels: Communications Earth Observation Navigation Space Science Technology Development
dummy_data <- dummy_cols(dummy_data, select_columns = "Purpose", remove_first_dummy = FALSE)
# ORBIT : Levels: Elliptical GEO LEO MEO
dummy_data <- dummy_cols(dummy_data, select_columns = "Orbit", remove_first_dummy = FALSE)
# CONTINENT: Levels: Africa Americas Asia Europe Multinational Oceania
dummy_data <- dummy_cols(dummy_data, select_columns = "Continent", remove_first_dummy = FALSE)
View(dummy_data)
dummy_data <- dummy_data[,c(1:2,6:15,17:33)]
names(dummy_data)
time <- dummy_data$`Effective Lifetime`
status <- dummy_data$Status
covariates <- c(  "Longitude of GEO", "Perigee" ,  "Eccentricity", "Inclination", "Mass", "Users_Civil", "Users_Commercial", "Users_Government", "Users_Military", "Purpose_Communications", "Purpose_Earth Observation", "Purpose_Navigation", "Purpose_Space Science", "Purpose_Technology Development","Orbit_Elliptical", "Orbit_GEO", "Orbit_LEO", "Continent_Americas", "Continent_Asia", "Continent_Europe", "Continent_Others")
n_coef <- length(covariates)
cox1 <- coxph(Surv(time,status == 'retired') ~ ., data = dummy_data[,covariates])
summary(cox1)
table(dummy_data$Users_Military)
table(dummy_data$`Purpose_Earth Observation`)
table(dummy_data$`Purpose_Technology Development`)
library(readxl)
data <- read_excel("../Dataset/JoinDatasets.xlsx", col_names = TRUE)
data$Continent[which(data$Continent == "Africa")] <- "Other"
data$Continent[which(data$Continent == "Oceania")] <- "Others"
data$Continent[which(data$Continent == "Multinational")] <- "Others"
############ Expected Life vs Effective life for Continent
id <- which(is.na(data$`Expected Lifetime`))
x1 <- data$`Effective Lifetime`[-id]
y1 <- data$`Expected Lifetime`[-id]
Paesi <- data$Continent[-id]
df <- data.frame(x1,y1,Paesi)
# Crea lo scatterplot
ggplot(df, aes(x = x1, y = y1, color = Paesi)) +
geom_point(size = 3) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "gray") +
#scale_colour_viridis_d()+
theme_minimal()+
labs(title = "Effective lifetime vs Expected lifetime for Continent",
x = "Effective lifetime",
y = "Expected lifetime",
color = "Continent")
ggplot(df, aes(x = x1, y = y1, color = Paesi)) +
geom_point(size = 3) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "gray") +
#scale_colour_viridis_d()+
theme_minimal()+
labs(title = "Effective lifetime vs Expected lifetime for Continent",
x = "Effective lifetime",
y = "Expected lifetime",
color = "Continent")
#install.packages("png")
library(png)
# Install required package for generating plot
#install.packages("ggplot2")
library(ggplot2)
############ Expected Life vs Effective life for Continent
id <- which(is.na(data$`Expected Lifetime`))
x1 <- data$`Effective Lifetime`[-id]
y1 <- data$`Expected Lifetime`[-id]
Paesi <- data$Continent[-id]
df <- data.frame(x1,y1,Paesi)
# Crea lo scatterplot
ggplot(df, aes(x = x1, y = y1, color = Paesi)) +
geom_point(size = 3) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "gray") +
#scale_colour_viridis_d()+
theme_minimal()+
labs(title = "Effective lifetime vs Expected lifetime for Continent",
x = "Effective lifetime",
y = "Expected lifetime",
color = "Continent")
data <- read_excel("../Dataset/JoinDatasets.xlsx", col_names = TRUE)
data$Continent[which(data$Continent == "Africa")] <- "Others"
data$Continent[which(data$Continent == "Oceania")] <- "Others"
data$Continent[which(data$Continent == "Multinational")] <- "Others"
id <- which(is.na(data$`Expected Lifetime`))
x1 <- data$`Effective Lifetime`[-id]
y1 <- data$`Expected Lifetime`[-id]
Paesi <- data$Continent[-id]
df <- data.frame(x1,y1,Paesi)
# Crea lo scatterplot
ggplot(df, aes(x = x1, y = y1, color = Paesi)) +
geom_point(size = 3) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "gray") +
#scale_colour_viridis_d()+
theme_minimal()+
labs(title = "Effective lifetime vs Expected lifetime for Continent",
x = "Effective lifetime",
y = "Expected lifetime",
color = "Continent")
id <- which(is.na(data$`Expected Lifetime`))
x1 <- data$`Effective Lifetime`[-id]
y1 <- data$`Expected Lifetime`[-id]
Paesi <- data$Continent[-id]
Users <- data$Users[-id]
df <- data.frame(x1,y1,Users)
# Crea lo scatterplot
ggplot(df, aes(x = x1, y = y1, shape = Users, color = Users)) +
geom_point(size = 3) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "gray") +
scale_colour_viridis_d()+
theme_minimal()+
labs(title = "Effective lifetime vs Expected lifetime for users",
x = "Effective lifetime",
y = "Expected lifetime")
id <- which(is.na(data$`Expected Lifetime`))
x1 <- data$`Effective Lifetime`[-id]
y1 <- data$`Expected Lifetime`[-id]
Paesi <- data$Continent[-id]
Purpose <- data$Purpose[-id]
df <- data.frame(x1,y1,Purpose)
# Crea lo scatterplot
ggplot(df, aes(x = x1, y = y1, shape = Purpose, color = Purpose)) +
geom_point(size = 3) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "gray") +
scale_colour_viridis_d()+
theme_minimal()+
labs(title = "Effective lifetime vs Expected lifetime for purpose",
x = "Effective lifetime",
y = "Expected lifetime")
data$Purpose[which(data$Purpose == "Navigation")] <- "Earth Observation"
############ Expected Life vs Effective life for Purpose
id <- which(is.na(data$`Expected Lifetime`))
x1 <- data$`Effective Lifetime`[-id]
y1 <- data$`Expected Lifetime`[-id]
Paesi <- data$Continent[-id]
Purpose <- data$Purpose[-id]
df <- data.frame(x1,y1,Purpose)
# Crea lo scatterplot
ggplot(df, aes(x = x1, y = y1, shape = Purpose, color = Purpose)) +
geom_point(size = 3) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "gray") +
scale_colour_viridis_d()+
theme_minimal()+
labs(title = "Effective lifetime vs Expected lifetime for purpose",
x = "Effective lifetime",
y = "Expected lifetime")
# per lettura dataset se prendi file da github
library(readxl)
data <- read_excel("../Dataset/JoinDatasets.xlsx", col_names = TRUE)
library(readxl)
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
library(knitr)
library(broom)
library(tidyr)
data$Country <- factor(data$Country, ordered = F)
print('Country')
table(data$Country)
data$Continent <- factor(data$Continent, ordered = F)
print('Continent')
table(data$Continent)
data$Users <- factor(data$Users, ordered = F)
print('Users')
table(data$Users)
data$Purpose <- factor(data$Purpose, ordered = F)
print('Purpose')
table(data$Purpose)
data$Orbit <- factor(data$Orbit, ordered = F)
print('Class of Orbit')
table(data$Orbit)
data$Status <- factor(data$Status, ordered = F)
print('Status')
table(data$Status)
set.seed(42)
data <- data[sample(nrow(data)), ]
data$ID <- factor(seq(1:nrow(data)))
data_subs <- head(data)
time <- data_subs$'Effective Lifetime'
ggplot(data=data_subs,aes(x=ID,y=time)) +
geom_bar(stat='identity',width=0.2) +
geom_point(aes(color=Status,shape=Status),size=6) +
coord_flip()
time <- data$'Effective Lifetime'
fit <- survfit(Surv(time,Status == 'retired') ~ 1, data = data)
time <- data$'Effective Lifetime'
fit <- survfit(Surv(time,Status == 'retired') ~ 1, data = data)
summary(fit)
surv_median(fit) #6.32
library(survival)
library(readxl)
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
library(knitr)
library(broom)
library(tidyr)
library(readxl)
library(fastDummies)
data$Continent[which(data$Continent == "Africa")] <- "Others"
data$Continent[which(data$Continent == "Africa")] <- "Others"
data <- read_excel("../Dataset/JoinDatasets.xlsx", col_names = TRUE)
# data <- read_excel("../Dataset/TrainingSet.xlsx", col_names = TRUE)
# test <- read_excel("../Dataset/TestSet.xlsx", col_names = TRUE)
data$Continent[which(data$Continent == "Africa")] <- "Others"
data$Continent[which(data$Continent == "Oceania")] <- "Others"
data$Continent[which(data$Continent == "Multinational")] <- "Others"
data$Purpose[which(data$Purpose == "Navigation")] <- "Earth Observation"
# data$Purpose[which(data$Purpose == "Space Science")] <- "Technology Development"
data$Country <- factor(data$Country, ordered = F)
print('Country')
table(data$Country)
data$Continent <- factor(data$Continent, ordered = F)
print('Continent')
table(data$Continent)
data$Users <- factor(data$Users, ordered = F)
print('Users')
table(data$Users)
data$Purpose <- factor(data$Purpose, ordered = F)
print('Purpose')
table(data$Purpose)
data$Orbit <- factor(data$Orbit, ordered = F)
print('Class of Orbit')
table(data$Orbit)
data$Status <- factor(data$Status, ordered = F)
print('Status')
table(data$Status)
# USERS : Levels: Civil Commercial Government Military
dummy_data <- dummy_cols(data, select_columns = "Users", remove_first_dummy = TRUE)
# PURPOSE : Levels: Communications Earth Observation Technology Development
dummy_data <- dummy_cols(dummy_data, select_columns = "Purpose", remove_first_dummy = TRUE)
# ORBIT : Levels: Elliptical GEO LEO MEO
dummy_data <- dummy_cols(dummy_data, select_columns = "Orbit", remove_first_dummy = TRUE)
# CONTINENT: Levels: Americas Asia Europe Others
dummy_data <- dummy_cols(dummy_data, select_columns = "Continent", remove_first_dummy = TRUE)
# dataset without Purpose, Users, Continent and Orbit
# dummy_data <- dummy_data[,c(1:2,6:17,19:33)]
set.seed(42)
data <- data[sample(nrow(data)), ]
Mass.disc <- cut(data$Mass, breaks=c(0, 500, Inf), labels=c("light", "heavy"))
dummy_data$Mass.disc <- Mass.disc
table(Mass.disc)
# light heavy
#   440   134
boxplot(data$`Effective Lifetime`~ Mass.disc)
plot(data$Period, data$`Effective Lifetime`, xlab='Period')
hist(data$Period[which(data$Period < 2000)], xlab='Period', main='Histogram of Period', prob = TRUE)
summary(data$Period)
Per.disc <- cut(data$Period, breaks=c(0, 500, Inf), labels=c("short", "long"))
dummy_data$Per.disc <- Per.disc
table(Per.disc)
# short  long
#   412   162
boxplot(data$`Effective Lifetime`~ Per.disc)
plot(data$Inclination, data$`Effective Lifetime`, xlab='Inclination')
hist(data$Inclination, xlab='Inclination', main='Histogram of Inclination', prob = TRUE)
summary(data$Inclination)
Inc.disc <- cut(data$Inclination, breaks=c(0, 45, 180), labels=c("low", "high"))
dummy_data$Inc.disc <- Inc.disc
table(Inc.disc)
#  low high
#  141  419
boxplot(data$`Effective Lifetime`~ Inc.disc)
plot(data$Apogee, data$`Effective Lifetime`, xlab='Apogee')
hist(data$Apogee, xlab='Apogee', main='Histogram of Apogee', prob = TRUE)
summary(data$Apogee)
Ap.disc <- cut(data$Apogee, breaks=c(0, 25000, Inf), labels=c("low", "high"))
dummy_data$Ap.disc <- Ap.disc
table(Ap.disc)
# low high
# 443  131
boxplot(data$`Effective Lifetime`~ Ap.disc)
Pe.disc <- cut(data$Perigee, breaks=c(0, 10000, Inf), labels=c("low","high"))
dummy_data$Pe.disc <- Pe.disc
table(Pe.disc)
# low high
# 418  156
boxplot(data$`Effective Lifetime`~ Pe.disc)
plot(data$`Longitude of GEO`, data$`Effective Lifetime`, xlab='`Longitude of GEO`')
hist(data$`Longitude of GEO`, xlab='`Longitude of GEO`', main='Histogram of `Longitude of GEO`', prob = TRUE)
summary(data$`Longitude of GEO`)
cox9 <- coxph(Surv(time,status == 'retired') ~ Per.disc + strata(Users) + Continent_Asia + Continent_Europe + Continent_Others, data = dummy_data)
time <- dummy_data$`Effective Lifetime`
status <- dummy_data$Status
covariates <- c( "Perigee" ,"Apogee", "Inclination", "Period", "Mass", "Users_Commercial", "Users_Government", "Users_Military", "Purpose_Earth Observation", "Purpose_Technology Development", "Continent_Asia", "Continent_Europe", "Continent_Others")
cox1 <- coxph(Surv(time,status == 'retired') ~ ., data = dummy_data[,covariates])
summary(cox1)
test <- cox.zph(cox1)
test
covariates <- c( "Perigee" ,"Apogee", "Period", "Mass", "Users_Commercial", "Users_Government", "Users_Military", "Purpose_Earth Observation", "Purpose_Technology Development", "Continent_Asia", "Continent_Europe", "Continent_Others")
cox2 <- coxph(Surv(time,status == 'retired') ~ ., data = dummy_data[,covariates])
summary(cox2)
test <- cox.zph(cox2)
test
covariates <- c("Period", "Mass", "Users_Commercial", "Users_Government", "Users_Military", "Purpose_Technology Development", "Continent_Asia", "Continent_Europe", "Continent_Others")
cox4 <- coxph(Surv(time,status == 'retired') ~ ., data = dummy_data[,covariates])
summary(cox4)
test <- cox.zph(cox4)
test
covariates <- c("Period", "Mass", "Users_Commercial", "Users_Government", "Users_Military", "Purpose_Earth Observation", "Purpose_Technology Development", "Continent_Asia", "Continent_Europe", "Continent_Others")
cox3 <- coxph(Surv(time,status == 'retired') ~ ., data = dummy_data[,covariates])
summary(cox3)
test <- cox.zph(cox3)
test
covariates <- c("Period", "Mass", "Users_Commercial", "Users_Government", "Users_Military", "Purpose_Technology Development", "Continent_Asia", "Continent_Europe", "Continent_Others")
cox4 <- coxph(Surv(time,status == 'retired') ~ ., data = dummy_data[,covariates])
summary(cox4)
test <- cox.zph(cox4)
test
covariates <- c("Period", "Mass", "Users_Commercial", "Users_Government", "Users_Military", "Continent_Asia", "Continent_Europe", "Continent_Others")
cox5 <- coxph(Surv(time,status == 'retired') ~ ., data = dummy_data[,covariates])
summary(cox5)
test <- cox.zph(cox5)
test
cox6 <- coxph(Surv(time,status == 'retired') ~ Period + Mass + strata(Users) + Continent_Asia + Continent_Europe + Continent_Others, data = dummy_data)
summary(cox6)
test <- cox.zph(cox6)
test
cox7 <- coxph(Surv(time,status == 'retired') ~ Per.disc + Mass + strata(Users) + Continent_Asia + Continent_Europe + Continent_Others, data = dummy_data)
summary(cox7)
test <- cox.zph(cox7)
test
cox8 <- coxph(Surv(time,status == 'retired') ~ Per.disc + Mass.disc + strata(Users) + Continent_Asia + Continent_Europe + Continent_Others, data = dummy_data)
summary(cox8)
test <- cox.zph(cox8)
test
cox9 <- coxph(Surv(time,status == 'retired') ~ Per.disc + strata(Users) + Continent_Asia + Continent_Europe + Continent_Others, data = dummy_data)
summary(cox9)
test <- cox.zph(cox9)
test
cox9 <- coxph(Surv(time,status == 'retired') ~ Per.disc + strata(Users)  + Continent_Europe + Continent_Others, data = dummy_data)
summary(cox9)
test <- cox.zph(cox9)
test
lr_test <- anova(cox9, cox10, test = "Chisq")
ggforest(cox9, data = dummy_data)
coxed_cox9 <- coxed::coxed(cox9, newdata = dummy_data, method="npsf", bootstrap = TRUE, B=750)
plot(survfit(cox9, data=data),
col="darkorange2", lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Baseline estimated survival probability')
grid()
plot(survfit(cox9, data=data),
col="blue", lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Baseline estimated survival probability')
grid()
ggsurvplot(cox9, data = data,
risk.table = TRUE, # Add risk table
risk.table.col = "strata",
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=5,
title="Kaplan-Meier Curve for Satellites Survival by Users")
ggsurvplot(cox9, data = data,
risk.table = TRUE, # Add risk table
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=5,
title="Kaplan-Meier Curve for Satellites Survival by Users")
ggsurvplot(cox9, data = data,
risk.table = TRUE, # Add risk table
risk.table.col = "strata",
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=5,
title="Kaplan-Meier Curve for Satellites Survival by Users")
library(survival)
library(ggplot2)
# Assuming you have a Cox model named "cox9" and a dataset named "data"
# Make sure to replace these with your actual objects
# Fit the survival model
fit <- survfit(cox9, data=data)
# Convert survival data to a data frame
surv_data <- data.frame(time = fit$time, surv_prob = fit$surv)
# Plot using ggplot2
ggplot(surv_data, aes(x = time, y = surv_prob)) +
geom_step(color = "blue", size = 2, linetype = 1) +
labs(x = 'Time [days]', y = 'Survival Probability',
title = 'Baseline estimated survival probability') +
theme_minimal() +
theme(panel.grid = element_blank())
fit <- survfit(cox9, data=dummy_data)
ggsurvplot(cox9, data = dummy_data,
risk.table = TRUE, # Add risk table
risk.table.col = "strata",
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=5,
title="Kaplan-Meier Curve for Satellites Survival by Users")
fit <- survfit(cox9, data=dummy_data)
ggsurvplot(cox9, data = dummy_data,
risk.table = TRUE, # Add risk table
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=5,
title="Kaplan-Meier Curve for Satellites Survival by Users")
?ggsurvplot
library(survminer)
fit <- survfit(cox9, data=dummy_data)
ggsurvplot(cox9, data = dummy_data,
risk.table = TRUE, # Add risk table
risk.table.col = "strata",
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=5,
title="Kaplan-Meier Curve for Satellites Survival by Users")
fit
library(survival)
library(ggplot2)
# Assuming you have a Cox model named "cox9" and a dataset named "data"
# Make sure to replace these with your actual objects
# Fit the survival model
fit <- survfit(cox9, data=dummy_data)
# Convert survival data to a data frame
surv_data <- data.frame(time = fit$time, surv_prob = fit$surv)
# Plot using ggplot2
ggplot(surv_data, aes(x = time, y = surv_prob)) +
geom_step(color = "blue", size = 2, linetype = 1) +
labs(x = 'Time [days]', y = 'Survival Probability',
title = 'Baseline estimated survival probability') +
theme_minimal() +
theme(panel.grid = element_blank())
library(survminer)
fit <- survfit(cox9$formula, data=dummy_data)
ggsurvplot(cox9, data = dummy_data,
risk.table = TRUE, # Add risk table
risk.table.col = "strata",
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=5,
title="Kaplan-Meier Curve for Satellites Survival by Users")
