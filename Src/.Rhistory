indici_uguali <- numeric(0)
# Trova gli indici in cui gli elementi di vettore1 sono uguali a quelli di vettore2
for (i in seq_along(vettore1)) {
if (vettore1[i] == vettore2[i]) {
indici_uguali <- c(indici_uguali, i)
}
}
indici_uguali
for (i in data1$COSPAR Number){
id <- c()
# Scansiona gli indici di data1$COSPAR Number
for (i in seq_along(data1$`COSPAR Number`)) {
# Scansiona gli indici di data2$OBJECT_ID
for (k in seq_along(data2$OBJECT_ID)) {
# Controlla se gli elementi sono uguali
if (data1$`COSPAR Number`[i] == data2$OBJECT_ID[k]) {
# Salva l'indice di data1$COSPAR Number in id
id <- c(id, i)
}
}
}
source("~/.active-rstudio-document", echo=TRUE)
# Trova gli indici in cui gli elementi nei due vettori sono uguali
id <- which(data1$`COSPAR Number` %in% data2$OBJECT_ID)
# Visualizza gli indici trovati
print(id)
id2 <- which(data2$OBJECT_ID` %in% data1$`COSPAR Number`)
id2 <- which(data2$OBJECT_ID %in% data1$`COSPAR Number`)
data2 <- data2[id2,c(2,9)]
View(data2)
table(data2$DECAY_DATE)
summary(data2)
is.na(data2$DECAY_DATE)
id2 <- which(data2$DECAY_DATE == ' ')
id2 <- which(data2$DECAY_DATE != ' ')
id2 <- which(data2$OBJECT_ID %in% data1$`COSPAR Number`)
as.numeric(data2$DECAY_DATE)
is.null(data2$DECAY_DATE)
id2 <- which(data2$DECAY_DATE == ' ')
id2 <- which(data2$OBJECT_ID %in% data1$`COSPAR Number`)
class(data2$DECAY_DATE)
View(data2)
# Controlla se ci sono celle vuote nel dataframe
if (any(sapply(data2$DECAY_DATE, function(x) all(x == "" | x == " ")))) {
cat("Ci sono celle vuote nel dataframe.\n")
} else {
cat("Non ci sono celle vuote nel dataframe.\n")
}
id <- which(data2$DECAY_DATE == "")
data2 <- data2[id,]
View(data2)
data2 <- data2[id,]
data2 <- data2[id2,c(2,9)]
id <- which(data2$DECAY_DATE != "")
id <- which(data2$DECAY_DATE == "")
id2 <- which(data2$OBJECT_ID %in% data1$`COSPAR Number`)
data1 <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
data2 <- read.csv("../Dataset/satcat.csv", header = TRUE)
id2 <- which(data2$OBJECT_ID %in% data1$`COSPAR Number`)
data2 <- data2[id2,c(2,9)]
id <- which(data2$DECAY_DATE == "")
data2 <- data2[-id,]
View(data2)
View(data1)
id1 <- which(data1$`COSPAR Number` %in% data2$OBJECT_ID)
data1[id1]$Disposal Date <- data2$DECAY_DATE
data1$Disposal Date <- char(0)
data1$'Disposal Date' <- char(0)
data1$'Disposal Date' <- character(0)
columns_to_remove <- c("Name of Satellite, Alternate Names", "Country/Org of UN Registry", "Operator/Owner", "Detailed Purpose", "Type of Orbit", "Contractor", "Launch Site", "Launch Vehicle", "COSPAR Number", "NORAD Number", "Comments", "...32", "Source Used for Orbital Data", "Source...34", "Source...35", "Source...36", "Source...37", "Source...38", "Source...39", "Source...40")
data1 <- data1[, -c(which(names(data) %in% columns_to_remove), 41:71)]
columns_to_remove <- c("Name of Satellite, Alternate Names", "Country/Org of UN Registry", "Operator/Owner", "Detailed Purpose", "Type of Orbit", "Contractor", "Launch Site", "Launch Vehicle", "COSPAR Number", "NORAD Number", "Comments", "...32", "Source Used for Orbital Data", "Source...34", "Source...35", "Source...36", "Source...37", "Source...38", "Source...39", "Source...40")
data1 <- data1[, -c(which(names(data1) %in% columns_to_remove), 41:71)]
columns_to_remove <- c("Name of Satellite, Alternate Names", "Country/Org of UN Registry", "Operator/Owner", "Detailed Purpose", "Type of Orbit", "Contractor", "Launch Site", "Launch Vehicle", "COSPAR Number", "NORAD Number", "Comments", "...32", "Source Used for Orbital Data", "Source...34", "Source...35", "Source...36", "Source...37", "Source...38", "Source...39", "Source...40")
data1 <- data1[, -c(which(names(data1) %in% columns_to_remove), 41:68)]
View(data1)
data1 <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
View(data1)
columns_to_remove <- c("Name of Satellite, Alternate Names", "Country/Org of UN Registry", "Operator/Owner", "Detailed Purpose", "Type of Orbit", "Contractor", "Launch Site", "Launch Vehicle", "COSPAR Number", "NORAD Number", "Comments", "...32", "Source Used for Orbital Data", "Source...34", "Source...35", "Source...36", "Source...37", "Source...38", "Source...39", "Source...40")
data1 <- data1[, -c(which(names(data1) %in% columns_to_remove), 41:68)]
View(data1)
data1 <- data1[, -c(17:24)]
View(data1)
data1$'Disposal Date' <- character(0)
data1$`Disposal Date` <- vector("character", length = nrow(data1))
data1$`Disposal Date`[id] <- data2$DECAY_DATE
data1[id]$`Disposal Date` <- data2$DECAY_DATE
data1[id1]$`Disposal Date` <- data2$DECAY_DATE
id1
# Assicurati che k non superi la lunghezza di data2$DECAY_DATE
k <- min(length(id1), length(data2$DECAY_DATE))
# Assegna i valori direttamente
data1$id1$`Disposal Date` <- data2$DECAY_DATE[seq_len(k)]
data1[id1]$`Disposal Date` <- data2$DECAY_DATE[seq_len(k)]
id1
length(id1)
data1$`Disposal Date`[id]
data1 <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
columns_to_remove <- c("Name of Satellite, Alternate Names", "Country/Org of UN Registry", "Operator/Owner", "Detailed Purpose", "Type of Orbit", "Contractor", "Launch Site", "Launch Vehicle", "COSPAR Number", "NORAD Number", "Comments", "...32", "Source Used for Orbital Data", "Source...34", "Source...35", "Source...36", "Source...37", "Source...38", "Source...39", "Source...40")
data1 <- data1[, -c(which(names(data1) %in% columns_to_remove), 41:68)]
data1 <- data1[, -c(17:24)]
data1$`Disposal Date` <- vector("character", length = nrow(data1))
id
id1 <- which(data1$`COSPAR Number` %in% data2$OBJECT_ID)
id1 <- which(data1$`COSPAR Number` %in% data2$OBJECT_ID)
id2 <- which(data2$OBJECT_ID %in% data1$`COSPAR Number`)
data2 <- data2[id2,c(2,9)]
id <- which(data2$DECAY_DATE == "")
data2 <- data2[-id,]
data2 <- read.csv("../Dataset/satcat.csv", header = TRUE)
id1 <- which(data1$`COSPAR Number` %in% data2$OBJECT_ID)
data2 <- read.csv("../Dataset/satcat.csv", header = TRUE)
data1 <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
id1 <- which(data1$`COSPAR Number` %in% data2$OBJECT_ID)
id2 <- which(data2$OBJECT_ID %in% data1$`COSPAR Number`)
data2 <- data2[id2,c(2,9)]
id <- which(data2$DECAY_DATE == "")
data2 <- data2[-id,]
id1 <- which(data1$`COSPAR Number` %in% data2$OBJECT_ID)
lenght(id1)
length(id1)
View(data2)
columns_to_remove <- c("Name of Satellite, Alternate Names", "Country/Org of UN Registry", "Operator/Owner", "Detailed Purpose", "Type of Orbit", "Contractor", "Launch Site", "Launch Vehicle", "COSPAR Number", "NORAD Number", "Comments", "...32", "Source Used for Orbital Data", "Source...34", "Source...35", "Source...36", "Source...37", "Source...38", "Source...39", "Source...40")
data1 <- data1[, -c(which(names(data1) %in% columns_to_remove), 41:68)]
data1 <- data1[, -c(17:24)]
data1$`Disposal Date` <- vector("character", length = nrow(data1))
data1$`Disposal Date`[id] <- data2$DECAY_DATE
id1
data1$`Disposal Date` <- vector("character", length = nrow(data1))
data1$`Disposal Date`[id1] <- data2$DECAY_DATE
id <- which(data1$`Disposal Date` == "")
data1 <- data1[-id,]
View(data1)
data1 <- dat1a[, -which(names(data1) == "Country of Contractor")]
data1 <- data1[, -which(names(data1) == "Country of Contractor")]
View(data1)
library(readxl)
data1 <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
data2 <- read.csv("../Dataset/satcat.csv", header = TRUE)
# Trova gli indici in cui gli elementi nei due vettori sono uguali
id1 <- which(data1$`COSPAR Number` %in% data2$OBJECT_ID)
id2 <- which(data2$OBJECT_ID %in% data1$`COSPAR Number`)
data2 <- data2[id2,c(2,9)]
id <- which(data2$DECAY_DATE == "")
data2 <- data2[-id,]
id1 <- which(data1$`COSPAR Number` %in% data2$OBJECT_ID)
columns_to_remove <- c("Name of Satellite, Alternate Names", "Country/Org of UN Registry", "Operator/Owner", "Detailed Purpose", "Type of Orbit", "Contractor", "Launch Site", "Launch Vehicle", "COSPAR Number", "NORAD Number", "Comments", "...32", "Source Used for Orbital Data", "Source...34", "Source...35", "Source...36", "Source...37", "Source...38", "Source...39", "Source...40")
data1 <- data1[, -c(which(names(data1) %in% columns_to_remove), 41:68)]
data1 <- data1[, -c(17:24)]
data1$`Disposal Date` <- vector("character", length = nrow(data1))
data1$`Disposal Date`[id1] <- data2$DECAY_DATE
id <- which(data1$`Disposal Date` == "")
# dataset con disposal date
data1 <- data1[-id,]
View(data1)
datanostro <- read_excel("../Dataset/Data_Satellites.xlsx", col_names = TRUE)
View(datanostro)
View(data1)
id <- which(data1$`Current Official Name of Satellite` %in% datanostro$`Satellite Name`)
View(data1)
data1$`Dry Mass (kg.)` <- as.numeric(data1$`Dry Mass (kg.)`)
data1$`Longitude of GEO (degrees)` <- as.numeric(data1$`Longitude of GEO (degrees)`)
columns_to_remove <- c("Power (watts)", "Dry Mass (kg.)")
data <- data[, -which(names(data) %in% columns_to_remove)]
columns_to_remove <- c("Power (watts)", "Dry Mass (kg.)")
data1 <- data1[, -which(names(data1) %in% columns_to_remove)]
View(data1)
View(datanostro)
dat11Status <- 'retired'
data1$Status <- 'retired'
data1$`Effective Lifetime` <- vector("character", length = nrow(data1))
sat.da.agg.a.data1 <- datanostro[-id,]
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
id1 <- which(datainiz$`Current Official Name of Satellite` %in% sat.da.agg.a.data1$`Satellite Name`)
id1 <- which(sat.da.agg.a.data1$`Satellite Name` %in% datainiz$`Current Official Name of Satellite`)
id1 <- which(datainiz$`Current Official Name of Satellite` %in% sat.da.agg.a.data1$`Satellite Name`)
View(data1)
sat.da.agg.a.data1$'Lunch Mass kg(.)' <- vector("character", length = nrow(sat.da.agg.a.data1))
id1 <- which(sat.da.agg.a.data1$`Satellite Name` %in% datainiz$`Current Official Name of Satellite`)
sat.da.agg.a.data1$`Lunch Mass kg(.)` <- datainiz$`Launch Mass (kg.)`[id1]
View(sat.da.agg.a.data1)
"Perigee", "Apogee", "Eccentricity", "Inclination", "Period", "Mass", "Launch Date","Expected Lifetime",  "Final Date", "Status", "Effective Lifetime")
names(data1) <- c("Satellite Name", "Country", "Users", "Purpose", "Orbit", "Longitude of GEO","Perigee", "Apogee", "Eccentricity", "Inclination", "Period", "Mass", "Launch Date","Expected Lifetime",  "Final Date", "Status", "Effective Lifetime")
colnames(sat.da.agg.a.data1)
names(sat.da.agg.a.data1) <- ("Satellite Name" ,    "Country"  ,          "Users"   ,           "Purpose"   ,         "Orbit"     ,
names(sat.da.agg.a.data1) <- c("Satellite Name" ,    "Country"  ,          "Users"   ,           "Purpose"   ,         "Orbit"     ,
"Longitude of GEO"  , "Perigee"  ,          "Apogee"    ,         "Eccentricity"  ,     "Inclination"  ,
"Period"      ,       "Mass"        ,       "Launch Date"   ,     "Status"        ,     "Final Date"      ,
"Effective Lifetime" ,"Expected Lifetime" , "Continent"     ,     " Mass" )
sat.da.agg.a.data1<-sat.da.agg.a.data1[,-18]
JoinData <- rbind(data1,sat.da.agg.a.data1)
sat.da.agg.a.data1<-sat.da.agg.a.data1[,-12]
JoinData <- rbind(data1,sat.da.agg.a.data1)
which(colnames(data1) != colnames(sat.da.agg.a.data1))
colnames(sat.da.agg.a.data1)
data1 <- data1[,c( "Satellite Name" ,    "Country"  ,          "Users" ,             "Purpose"     ,       "Orbit"    ,
"Longitude of GEO",  "Perigee"      ,      "Apogee"  ,           "Eccentricity" ,      "Inclination"  ,
"Period"    ,         "Launch Date"    ,    "Status"  ,           "Final Date"  ,       "Effective Lifetime",
"Expected Lifetime"  ," Mass" )]
View(data1)
data1<- data1[, names(sat.da.agg.a.data1)]
View(data1)
View(sat.da.agg.a.data1)
names(sat.da.agg.a.data1)
colnames(daa)
colnames(data1)
names(sat.da.agg.a.data1) <- c("Satellite Name" ,    "Country"  ,          "Users"   ,           "Purpose"   ,         "Orbit"     ,
"Longitude of GEO"  , "Perigee"  ,          "Apogee"    ,         "Eccentricity"  ,     "Inclination"  ,
"Period"      ,       "Mass"        ,       "Launch Date"   ,     "Status"        ,     "Final Date"      ,
"Effective Lifetime" ,"Expected Lifetime" , "Continent"     ,     "Mass" )
sat.da.agg.a.data1 <- datanostro[-id,]
id1 <- which(sat.da.agg.a.data1$`Satellite Name` %in% datainiz$`Current Official Name of Satellite`)
sat.da.agg.a.data1$'Lunch Mass kg(.)' <- vector("character", length = nrow(sat.da.agg.a.data1))
sat.da.agg.a.data1$`Lunch Mass kg(.)` <- datainiz$`Launch Mass (kg.)`[id1]
names(data1) <- c("Satellite Name", "Country", "Users", "Purpose", "Orbit", "Longitude of GEO","Perigee", "Apogee", "Eccentricity", "Inclination", "Period", "Mass", "Launch Date","Expected Lifetime",  "Final Date", "Status", "Effective Lifetime")
names(sat.da.agg.a.data1) <- c("Satellite Name" ,    "Country"  ,          "Users"   ,           "Purpose"   ,         "Orbit"     ,
"Longitude of GEO"  , "Perigee"  ,          "Apogee"    ,         "Eccentricity"  ,     "Inclination"  ,
"Period"      ,       "Mass"        ,       "Launch Date"   ,     "Status"        ,     "Final Date"      ,
"Effective Lifetime" ,"Expected Lifetime" , "Continent"     ,     "Mass" )
sat.da.agg.a.data1<-sat.da.agg.a.data1[,-18]
sat.da.agg.a.data1<-sat.da.agg.a.data1[,-12]
View(sat.da.agg.a.data1)
data1<- data1[, names(sat.da.agg.a.data1)]
View(data1)
joinData <- rbind(sat.da.agg.a.data1,data1)
joinData <- cbind(sat.da.agg.a.data1,data1)
joinData <- rbind(sat.da.agg.a.data1,data1)
colnames(data1)
colnmaes(sat.da.agg.a.data1)
colnames(sat.da.agg.a.data1)
summary(data1)
summary(sat.da.agg.a.data1)
class(data1)
library(dplyr)
joinData <- bind_rows(sat.da.agg.a.data1,data1)
data1$Apogee <- as.numeric(data1$Apogee)
joinData <- bind_rows(sat.da.agg.a.data1,data1)
sat.da.agg.a.data1$`Launch Date`<-as.character(sat.da.agg.a.data1$`Launch Date`)
library(dplyr)
joinData <- bind_rows(sat.da.agg.a.data1,data1)
sat.da.agg.a.data1$`Final Date`<-as.character(sat.da.agg.a.data1$`Final Date`)
joinData <- bind_rows(sat.da.agg.a.data1,data1)
data1$`Effective Lifetime`<-as.numeric(data1$`Effective Lifetime`)
joinData <- bind_rows(sat.da.agg.a.data1,data1)
View(joinData)
table(JoinData$Status)
table(joinData$Status)
df <- data.frame()
for (colonna in colnames(joinData)) {
conteggio_na <- sum(is.na(joinData[[colonna]]))
df <- rbind(df, data.frame(Colonna = colonna, Numero_di_NA = conteggio_na))
}
df
library(openxlsx)
write.xlsx(joinData, rowNames = FALSE)
getwd()
path = "C:/Users/alessandro/Documents/GitHub/NPS_project/Src"
write.xlsx(joinData,path, rowNames = FALSE)
View(joinData)
as.Date(joinData$`Launch Date`)
sat.da.agg.a.data1 <- datanostro[-id,]
id1 <- which(sat.da.agg.a.data1$`Satellite Name` %in% datainiz$`Current Official Name of Satellite`)
sat.da.agg.a.data1$'Lunch Mass kg(.)' <- vector("character", length = nrow(sat.da.agg.a.data1))
sat.da.agg.a.data1$`Lunch Mass kg(.)` <- datainiz$`Launch Mass (kg.)`[id1]
names(data1) <- c("Satellite Name", "Country", "Users", "Purpose", "Orbit", "Longitude of GEO","Perigee", "Apogee", "Eccentricity", "Inclination", "Period", "Mass", "Launch Date","Expected Lifetime",  "Final Date", "Status", "Effective Lifetime")
names(sat.da.agg.a.data1) <- c("Satellite Name" ,    "Country"  ,          "Users"   ,           "Purpose"   ,         "Orbit"     ,
"Longitude of GEO"  , "Perigee"  ,          "Apogee"    ,         "Eccentricity"  ,     "Inclination"  ,
"Period"      ,       "Mass"        ,       "Launch Date"   ,     "Status"        ,     "Final Date"      ,
"Effective Lifetime" ,"Expected Lifetime" , "Continent"     ,     "Mass" )
sat.da.agg.a.data1<-sat.da.agg.a.data1[,-18]
sat.da.agg.a.data1<-sat.da.agg.a.data1[,-12]
data1<- data1[, names(sat.da.agg.a.data1)]
data1$Apogee <- as.numeric(data1$Apogee)
View(sat.da.agg.a.data1)
data1$`Effective Lifetime`<-as.numeric(data1$`Effective Lifetime`)
joinData <- bind_rows(sat.da.agg.a.data1,data1)
data1$`Launch Date`<-as.Date(data1$`Launch Date`)
data1$`Launch Date`<-as.Date(data1$`Launch Date`)
View(data1)
library(readxl)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
data2 <- read.csv("../Dataset/satcat.csv", header = TRUE)
# Trova gli indici in cui gli elementi nei due vettori sono uguali
id1 <- which(data1$`COSPAR Number` %in% data2$OBJECT_ID)
id2 <- which(data2$OBJECT_ID %in% data1$`COSPAR Number`)
data2 <- data2[id2,c(2,9)]
id <- which(data2$DECAY_DATE == "")
data2 <- data2[-id,]
id1 <- which(data1$`COSPAR Number` %in% data2$OBJECT_ID)
columns_to_remove <- c("Name of Satellite, Alternate Names", "Country/Org of UN Registry", "Operator/Owner", "Detailed Purpose", "Type of Orbit", "Contractor", "Launch Site", "Launch Vehicle", "COSPAR Number", "NORAD Number", "Comments", "...32", "Source Used for Orbital Data", "Source...34", "Source...35", "Source...36", "Source...37", "Source...38", "Source...39", "Source...40")
data1 <- data1[, -c(which(names(data1) %in% columns_to_remove), 41:68)]
library(readxl)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
data2 <- read.csv("../Dataset/satcat.csv", header = TRUE)
# Trova gli indici in cui gli elementi nei due vettori sono uguali
id1 <- which(data1$`COSPAR Number` %in% data2$OBJECT_ID)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
data1 <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
data2 <- read.csv("../Dataset/satcat.csv", header = TRUE)
# Trova gli indici in cui gli elementi nei due vettori sono uguali
id1 <- which(datainiz$`COSPAR Number` %in% data2$OBJECT_ID)
id2 <- which(data2$OBJECT_ID %in% data1$`COSPAR Number`)
data2 <- data2[id2,c(2,9)]
id <- which(data2$DECAY_DATE == "")
data2 <- data2[-id,]
id1 <- which(data1$`COSPAR Number` %in% data2$OBJECT_ID)
columns_to_remove <- c("Name of Satellite, Alternate Names", "Country/Org of UN Registry", "Operator/Owner", "Detailed Purpose", "Type of Orbit", "Contractor", "Launch Site", "Launch Vehicle", "COSPAR Number", "NORAD Number", "Comments", "...32", "Source Used for Orbital Data", "Source...34", "Source...35", "Source...36", "Source...37", "Source...38", "Source...39", "Source...40")
data1 <- data1[, -c(which(names(data1) %in% columns_to_remove), 41:68)]
data1 <- data1[, -c(17:24)]
data1$`Disposal Date` <- vector("character", length = nrow(data1))
data1$`Disposal Date`[id1] <- data2$DECAY_DATE
id <- which(data1$`Disposal Date` == "")
# dataset con disposal date
data1 <- data1[-id,]
datanostro <- read_excel("../Dataset/Data_Satellites.xlsx", col_names = TRUE)
id <- which(data1$`Current Official Name of Satellite` %in% datanostro$`Satellite Name`)
data1$`Dry Mass (kg.)` <- as.numeric(data1$`Dry Mass (kg.)`)
data1$`Longitude of GEO (degrees)` <- as.numeric(data1$`Longitude of GEO (degrees)`)
columns_to_remove <- c("Power (watts)", "Dry Mass (kg.)")
data1 <- data1[, -which(names(data1) %in% columns_to_remove)]
data1$Status <- 'retired'
data1$`Effective Lifetime` <- vector("character", length = nrow(data1))
sat.da.agg.a.data1 <- datanostro[-id,]
id1 <- which(sat.da.agg.a.data1$`Satellite Name` %in% datainiz$`Current Official Name of Satellite`)
sat.da.agg.a.data1$'Lunch Mass kg(.)' <- vector("character", length = nrow(sat.da.agg.a.data1))
sat.da.agg.a.data1$`Lunch Mass kg(.)` <- datainiz$`Launch Mass (kg.)`[id1]
View(data1)
library(readxl)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
data1 <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
data2 <- read.csv("../Dataset/satcat.csv", header = TRUE)
# Trova gli indici in cui gli elementi nei due vettori sono uguali
id1 <- which(datainiz$`COSPAR Number` %in% data2$OBJECT_ID)
id2 <- which(data2$OBJECT_ID %in% data1$`COSPAR Number`)
data2 <- data2[id2,c(2,9)]
id <- which(data2$DECAY_DATE == "")
data2 <- data2[-id,]
id1 <- which(data1$`COSPAR Number` %in% data2$OBJECT_ID)
columns_to_remove <- c("Name of Satellite, Alternate Names", "Country/Org of UN Registry", "Operator/Owner", "Detailed Purpose", "Type of Orbit", "Contractor", "Launch Site", "Launch Vehicle", "COSPAR Number", "NORAD Number", "Comments", "...32", "Source Used for Orbital Data", "Source...34", "Source...35", "Source...36", "Source...37", "Source...38", "Source...39", "Source...40")
data1 <- data1[, -c(which(names(data1) %in% columns_to_remove), 41:68)]
View(data1)
View(datainiz)
datainiz$`Date of Launch`<-as.POSIXct(datainiz$`Date of Launch`)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
View(datainiz)
View(datainiz)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
View(datainiz)
datainiz$`Date of Launch`<-as.Date(datainiz$`Date of Launch`)
library(readxl)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
View(datainiz)
class(datainiz$`Date of Launch`)
datainiz$`Date of Launch`<- as.Date(datainiz$`Date of Launch, format = "%Y-%m-%d")
View(datainiz)
View(datainiz)
datainiz$`Date of Launch`<- as.Date(datainiz$`Date of Launch, format = "%Y-%m-%d")
datainiz$`Date of Launch`<- as.Date(datainiz$'Date of Launch', format = "%Y-%m-%d")
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
datainiz$`Date of Launch`<- as.POSIXct(datainiz$'Date of Launch', 'UTC')
View(datainiz)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
View(datainiz)
summary(datainiz)
library(readxl)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
datainiz$`Date of Launch`<- as.POSIXct(datainiz$'Date of Launch', 'UTC')
library(readxl)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
data1 <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
data2 <- read.csv("../Dataset/satcat.csv", header = TRUE)
# Trova gli indici in cui gli elementi nei due vettori sono uguali
id1 <- which(datainiz$`COSPAR Number` %in% data2$OBJECT_ID)
id2 <- which(data2$OBJECT_ID %in% data1$`COSPAR Number`)
data2 <- data2[id2,c(2,9)]
id <- which(data2$DECAY_DATE == "")
data2 <- data2[-id,]
id1 <- which(data1$`COSPAR Number` %in% data2$OBJECT_ID)
columns_to_remove <- c("Name of Satellite, Alternate Names", "Country/Org of UN Registry", "Operator/Owner", "Detailed Purpose", "Type of Orbit", "Contractor", "Launch Site", "Launch Vehicle", "COSPAR Number", "NORAD Number", "Comments", "...32", "Source Used for Orbital Data", "Source...34", "Source...35", "Source...36", "Source...37", "Source...38", "Source...39", "Source...40")
data1 <- data1[, -c(which(names(data1) %in% columns_to_remove), 41:68)]
data1 <- data1[, -c(17:24)]
data1$`Disposal Date` <- vector("character", length = nrow(data1))
data1$`Disposal Date`[id1] <- data2$DECAY_DATE
id <- which(data1$`Disposal Date` == "")
# dataset con disposal date
data1 <- data1[-id,]
datanostro <- read_excel("../Dataset/Data_Satellites.xlsx", col_names = TRUE)
id <- which(data1$`Current Official Name of Satellite` %in% datanostro$`Satellite Name`)
data1$`Dry Mass (kg.)` <- as.numeric(data1$`Dry Mass (kg.)`)
data1$`Longitude of GEO (degrees)` <- as.numeric(data1$`Longitude of GEO (degrees)`)
columns_to_remove <- c("Power (watts)", "Dry Mass (kg.)")
data1 <- data1[, -which(names(data1) %in% columns_to_remove)]
data1$Status <- 'retired'
data1$`Effective Lifetime` <- vector("character", length = nrow(data1))
sat.da.agg.a.data1 <- datanostro[-id,]
id1 <- which(sat.da.agg.a.data1$`Satellite Name` %in% datainiz$`Current Official Name of Satellite`)
sat.da.agg.a.data1$'Lunch Mass kg(.)' <- vector("character", length = nrow(sat.da.agg.a.data1))
sat.da.agg.a.data1$`Lunch Mass kg(.)` <- datainiz$`Launch Mass (kg.)`[id1]
names(data1) <- c("Satellite Name", "Country", "Users", "Purpose", "Orbit", "Longitude of GEO","Perigee", "Apogee", "Eccentricity", "Inclination", "Period", "Mass", "Launch Date","Expected Lifetime",  "Final Date", "Status", "Effective Lifetime")
names(sat.da.agg.a.data1) <- c("Satellite Name" ,    "Country"  ,          "Users"   ,           "Purpose"   ,         "Orbit"     ,
"Longitude of GEO"  , "Perigee"  ,          "Apogee"    ,         "Eccentricity"  ,     "Inclination"  ,
"Period"      ,       "Mass"        ,       "Launch Date"   ,     "Status"        ,     "Final Date"      ,
"Effective Lifetime" ,"Expected Lifetime" , "Continent"     ,     "Mass" )
sat.da.agg.a.data1<-sat.da.agg.a.data1[,-18]
sat.da.agg.a.data1<-sat.da.agg.a.data1[,-12]
data1<- data1[, names(sat.da.agg.a.data1)]
data1$Apogee <- as.numeric(data1$Apogee)
View(data1)
# Caricare la libreria
library(openxlsx)
path = "C:/Users/alessandro/Documents/GitHub/NPS_project/Src"
# Scrivere il dataframe nel file Excel
write.xlsx(data1,path, rowNames = FALSE)
library(readxl)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
View(datainiz)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
View(datainiz)
library(readxl)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
View(datainiz)
install.packages("openxlsx")
library(openxlsx)
datainiz <- read.xlsx("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
datainiz <- read.xlsx("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx")
View(datainiz)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE,  col_types = "date")
View(datainiz)
View(datainiz)
View(datainiz)
View(datainiz)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE,   cols(Date Of Launch) = "date"))
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE, col_types = cols(Date of Launch) = "date"))
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE, col_types = cols('Date of Launch') = "date"))
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE, col_types = cols(Date of Launch = "date"))
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE, col_types = cols('Date of Launch' = "date"))
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE, col_types = list('Date of Launch' = "date"))
View(datainiz)
library(readxl)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023.xlsx", col_names = TRUE)
View(datainiz)
class(datainiz$`Date of Launch`)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023.xlsx", col_names = TRUE)
library(readxl)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023.xlsx", col_names = TRUE)
View(datainiz)
library(readxl)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023 (1).xlsx", col_names = TRUE)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023.xlsx", col_names = TRUE)
View(datainiz)
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023.xlsx", col_names = TRUE, col_types = "guess" )
View(datainiz)
types = c(rep('guess'),68)
types[20] = 'date'
types = rep('guess',68)
types[20] = 'date'
library(readxl)
types = rep('guess',68)
types[20] = 'date'
datainiz <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023.xlsx", col_names = TRUE, col_types = types )
View(datainiz)
data1 <- read_excel("../Dataset/UCS-Satellite-Database-1-1-2023.xlsx", col_names = TRUE, col_types = types)
data2 <- read.csv("../Dataset/satcat.csv", header = TRUE)
# Trova gli indici in cui gli elementi nei due vettori sono uguali
id1 <- which(datainiz$`COSPAR Number` %in% data2$OBJECT_ID)
id2 <- which(data2$OBJECT_ID %in% data1$`COSPAR Number`)
data2 <- data2[id2,c(2,9)]
id <- which(data2$DECAY_DATE == "")
data2 <- data2[-id,]
id1 <- which(data1$`COSPAR Number` %in% data2$OBJECT_ID)
columns_to_remove <- c("Name of Satellite, Alternate Names", "Country/Org of UN Registry", "Operator/Owner", "Detailed Purpose", "Type of Orbit", "Contractor", "Launch Site", "Launch Vehicle", "COSPAR Number", "NORAD Number", "Comments", "...32", "Source Used for Orbital Data", "Source...34", "Source...35", "Source...36", "Source...37", "Source...38", "Source...39", "Source...40")
data1 <- data1[, -c(which(names(data1) %in% columns_to_remove), 41:68)]
data1 <- data1[, -c(17:24)]
data1$`Disposal Date` <- vector("character", length = nrow(data1))
data1$`Disposal Date`[id1] <- data2$DECAY_DATE
id <- which(data1$`Disposal Date` == "")
# dataset con disposal date
data1 <- data1[-id,]
datanostro <- read_excel("../Dataset/Data_Satellites.xlsx", col_names = TRUE)
id <- which(data1$`Current Official Name of Satellite` %in% datanostro$`Satellite Name`)
data1$`Dry Mass (kg.)` <- as.numeric(data1$`Dry Mass (kg.)`)
data1$`Longitude of GEO (degrees)` <- as.numeric(data1$`Longitude of GEO (degrees)`)
columns_to_remove <- c("Power (watts)", "Dry Mass (kg.)")
data1 <- data1[, -which(names(data1) %in% columns_to_remove)]
data1$Status <- 'retired'
data1$`Effective Lifetime` <- vector("character", length = nrow(data1))
sat.da.agg.a.data1 <- datanostro[-id,]
id1 <- which(sat.da.agg.a.data1$`Satellite Name` %in% datainiz$`Current Official Name of Satellite`)
sat.da.agg.a.data1$'Lunch Mass kg(.)' <- vector("character", length = nrow(sat.da.agg.a.data1))
sat.da.agg.a.data1$`Lunch Mass kg(.)` <- datainiz$`Launch Mass (kg.)`[id1]
names(data1) <- c("Satellite Name", "Country", "Users", "Purpose", "Orbit", "Longitude of GEO","Perigee", "Apogee", "Eccentricity", "Inclination", "Period", "Mass", "Launch Date","Expected Lifetime",  "Final Date", "Status", "Effective Lifetime")
names(sat.da.agg.a.data1) <- c("Satellite Name" ,    "Country"  ,          "Users"   ,           "Purpose"   ,         "Orbit"     ,
"Longitude of GEO"  , "Perigee"  ,          "Apogee"    ,         "Eccentricity"  ,     "Inclination"  ,
"Period"      ,       "Mass"        ,       "Launch Date"   ,     "Status"        ,     "Final Date"      ,
"Effective Lifetime" ,"Expected Lifetime" , "Continent"     ,     "Mass" )
sat.da.agg.a.data1<-sat.da.agg.a.data1[,-18]
sat.da.agg.a.data1<-sat.da.agg.a.data1[,-12]
data1<- data1[, names(sat.da.agg.a.data1)]
data1$Apogee <- as.numeric(data1$Apogee)
sat.da.agg.a.data1$`Final Date`<-as.character(sat.da.agg.a.data1$`Final Date`)
data1$`Effective Lifetime`<-as.numeric(data1$`Effective Lifetime`)
library(dplyr)
joinData <- bind_rows(sat.da.agg.a.data1,data1)
table(joinData$Status)
View(joinData)
# Caricare la libreria
library(openxlsx)
path = "C:/Users/alessandro/Documents/GitHub/NPS_project/Src"
# Scrivere il dataframe nel file Excel
write.xlsx(joinData,path, rowNames = FALSE)
