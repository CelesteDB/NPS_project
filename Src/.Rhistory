abline(h=0, col='red')
}
ggcoxdiagnostics(mod.cox, type = "scaledsch")
summary(mod.cox.strata)
mod.cox.strata <- coxph(Surv(time, status) ~ age + sex + strata(ph.karno) + wt.loss, data =  lung)
summary(mod.cox.strata)
test.ph.strata <- cox.zph(mod.cox.strata)
test.ph.strata
?strata
?knots
test.ph <- cox.zph(mod.cox)
test.ph
mod.cox.strata <- coxph(Surv(time, status) ~ age + sex + strata(ph.karno) + wt.loss, data =  lung)
summary(mod.cox.strata)
plot(survfit(mod.cox.strata, data=lung),
plot(survfit(mod.cox.strata, data=lung),
col="darkorange2", lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Baseline estimated survival probability')
grid()
plot(survfit(mod.cox.strata, data=lung),
col="darkorange2", lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Baseline estimated survival probability')
grid()
library(readxl)
data <- read_excel("../Dataset/Data_Satellites.xlsx", col_names = TRUE)
setwd("C:/Users/alessandro/Documents/GitHub/NPS_project/Code")
library(readxl)
data <- read_excel("../Dataset/Data_Satellites.xlsx", col_names = TRUE)
View(data)
paesi <- data$Country
paesi
continent <- c("America", "Europe", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "Europe", "America", "America", "Multinational", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "Europe", "America", "America", "America", "Europe", "Europe", "America", "Europe", "Europe", "South America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "Europe", "America", "Europe", "Sweden", "Multinational", "America", "America", "Europe", "America", "Europe", "America", "America", "America", "Europe", "Asia", "Europe", "America", "America", "America", "America", "Multinational", "Multinational", "America", "Europe", "Europe", "America", "America", "America", "America", "America", "America", "America", "Asia", "Australia", "America", "America", "America", "America", "America", "Multinational", "Multinational", "America", "America", "America", "America", "Europe", "Asia", "America", "America", "Europe", "America", "Asia", "America", "Multinational", "Multinational", "America", "Multinational", "Asia", "Europe", "America", "Multinational", "America", "Multinational", "America", "America", "Multinational", "Multinational", "Multinational", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "South America", "America", "Asia", "Multinational", "Multinational", "Multinational", "Europe", "America", "America", "America", "America", "Europe", "Europe", "America", "America", "America", "America", "America", "Europe", "Asia", "Africa", "Multinational", "Asia", "America", "America", "Asia", "Multinational", "Europe", "Asia", "America", "America", "Asia", "America", "Asia", "Asia", "Asia", "Asia", "America", "Asia", "Europe", "Asia", "Europe", "America", "America", "Europe", "Asia", "America", "Asia", "Multinational", "South America", "America", "America", "Europe", "Asia", "America", "Multinational", "America", "America", "Asia", "Europe", "America", "America", "America", "Europe", "Europe", "Europe", "Europe", "America", "Europe", "Asia", "Asia", "Europe", "Europe", "Asia", "Asia", "Asia", "Europe", "Asia", "Asia", "America", "Europe", "Multinational", "America", "Asia", "Asia", "Asia", "America", "Asia", "Europe", "Europe", "Asia", "Europe", "Asia", "Multinational", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "Asia", "Asia", "America", "Asia", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "America", "America")
"America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "Europe", "America", "America", "Multinational", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "Europe", "America", "America", "America", "Europe", "Europe", "America", "Europe", "Europe", "South America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "Europe", "America", "Europe", "Sweden", "Multinational", "America", "America", "Europe", "America", "Europe", "America", "America", "America", "Europe", "Asia", "Europe", "America", "America", "America", "America", "Multinational", "Multinational", "America", "Europe", "Europe", "America", "America", "America", "America", "America", "America", "America", "Middle East", "Australia", "America", "America", "America", "America", "America", "Multinational", "Multinational", "America", "America", "America", "America", "Europe", "Asia", "America", "America", "Europe", "America", "Asia", "America", "Multinational", "Multinational", "America", "Multinational", "Asia", "Europe", "America", "Multinational", "America", "Multinational", "America", "America", "Multinational", "Multinational", "Multinational", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "South America", "America", "Asia", "Multinational", "Multinational", "Multinational", "Europe", "America", "America", "America", "America", "Europe", "Europe", "America", "America", "America", "America", "America", "Europe", "Asia", "Africa", "Multinational", "Asia", "America", "America", "Asia", "Multinational", "Europe", "Asia", "America", "America", "Asia", "America", "Asia", "Asia", "Asia", "Asia", "America", "Asia", "Europe", "Asia", "Europe", "America", "America", "Europe", "Asia", "America", "Asia", "Multinational", "South America", "America", "America", "Europe", "Asia", "America", "Multinational", "America", "America", "Asia", "Europe", "America", "America", "America", "Europe", "Europe", "Europe", "Europe", "America", "Europe", "Asia", "Asia", "Europe", "Europe", "Asia", "Asia", "Asia", "Europe", "Asia", "Asia", "America", "Europe", "Multinational", "America", "Asia", "Asia", "Asia", "America", "Asia", "Europe", "Europe", "Asia", "Europe", "Asia", "Multinational", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "Asia", "Asia", "America", "Asia", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "America", "America", "America", "America", "America", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Russia", "America", "Europe", "Europe", "Europe", "United Kingdom", "America", "Asia", "America"
cont <-  c("America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "Europe", "America", "America", "Multinational", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "Europe", "America", "America", "America", "Europe", "Europe", "America", "Europe", "Europe", "South America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "Europe", "America", "Europe", "Sweden", "Multinational", "America", "America", "Europe", "America", "Europe", "America", "America", "America", "Europe", "Asia", "Europe", "America", "America", "America", "America", "Multinational", "Multinational", "America", "Europe", "Europe", "America", "America", "America", "America", "America", "America", "America", "Middle East", "Australia", "America", "America", "America", "America", "America", "Multinational", "Multinational", "America", "America", "America", "America", "Europe", "Asia", "America", "America", "Europe", "America", "Asia", "America", "Multinational", "Multinational", "America", "Multinational", "Asia", "Europe", "America", "Multinational", "America", "Multinational", "America", "America", "Multinational", "Multinational", "Multinational", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "South America", "America", "Asia", "Multinational", "Multinational", "Multinational", "Europe", "America", "America", "America", "America", "Europe", "Europe", "America", "America", "America", "America", "America", "Europe", "Asia", "Africa", "Multinational", "Asia", "America", "America", "Asia", "Multinational", "Europe", "Asia", "America", "America", "Asia", "America", "Asia", "Asia", "Asia", "Asia", "America", "Asia", "Europe", "Asia", "Europe", "America", "America", "Europe", "Asia", "America", "Asia", "Multinational", "South America", "America", "America", "Europe", "Asia", "America", "Multinational", "America", "America", "Asia", "Europe", "America", "America", "America", "Europe", "Europe", "Europe", "Europe", "America", "Europe", "Asia", "Asia", "Europe", "Europe", "Asia", "Asia", "Asia", "Europe", "Asia", "Asia", "America", "Europe", "Multinational", "America", "Asia", "Asia", "Asia", "America", "Asia", "Europe", "Europe", "Asia", "Europe", "Asia", "Multinational", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "Asia", "Asia", "America", "Asia", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "America", "America", "America", "America", "America", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Russia", "America", "Europe", "Europe", "Europe", "United Kingdom", "America", "
Asia", "America")
library(countrycode)
install.packages("countrycode")
library(countrycode)
dataframe_paesi <- data.frame(paese = paesi)
dataframe_paesi$continente <- countrycode(sourcevar = dataframe_paesi$paese, origin = "iso2c", destination = "continent")
View(dataframe_paesi)
class(paesi)
dataframe_paesi$continente <- countrycode(sourcevar = dataframe_paesi$paese, origin = "iso2c", destination = "continent", custom_match = data.frame(iso2c = c("NonEsistente"), continent = c("NA")))
paesi <- c("USA", "United Kingdom", "France", "China", "India")
dataframe_paesi <- data.frame(paese = paesi)
dataframe_paesi$continente <- countrycode(sourcevar = dataframe_paesi$paese, origin = "iso2c", destination = "continent")
library(readxl)
data <- read_excel("../Dataset/Data_Satellites.xlsx", col_names = TRUE)
paesi <- data$Country
dataframe_paesi <- data.frame(paese = paesi)
library(countrycode)
continente <- countrycode(sourcevar = dataframe_paesi$paese, origin = "iso2c", destination = "continent")
View(dataframe_paesi)
continente <- countrycode(sourcevar = dataframe_paesi$paese, origin = "iso3c", destination = "continent")
continente <- countrycode(sourcevar = dataframe_paesi$paese, origin = "wb", destination = "continent")
continente <- countrycode(sourcevar = dataframe_paesi$paese, origin = "country.name", destination = "continent")
continente+
continente <- countrycode(sourcevar = dataframe_paesi$paese, origin = "country.name", destination = "continent")
continente
esa <- which(paesi == 'ESA')
multinat <- which(paesi == 'Multinational')
continente[esa] == 'Europe'
continente[esa] = 'Europe'
continente[multinat] = 'Multinational'
continente
data <- cbind(data,Continent = continente)
View(data)
save(data, "Data_new")
save(data, file ="Data_new")
save(data, file ="Data_new.Rdata")
data <- read_excel("../Dataset/Data_Satellites.xlsx", col_names = TRUE)
paesi <- data$Country
setwd("C:/Users/alessandro/Documents/GitHub/NPS_project/Src")
data <- read_excel("../Dataset/Data_Satellites.xlsx", col_names = TRUE)
library(readxl)
data <- read_excel("../Dataset/Data_Satellites.xlsx", col_names = TRUE)
paesi <- data$Country
# Carica il pacchetto
#install.packages("countrycode")
library(countrycode)
# Crea un dataframe di esempio con i paesi
dataframe_paesi <- data.frame(paese = paesi)
esa <- which(paesi == 'ESA')
multinat <- which(paesi == 'Multinational')
# Usa la funzione countrycode per ottenere il continente
continente <- countrycode(sourcevar = dataframe_paesi$paese, origin = "country.name", destination = "continent")
continente[esa] = 'Europe'
continente[multinat] = 'Multinational
data <- cbind(data,Continent = continente)
data <- cbind(data,Continent = continente)
data <- cbind(data,Continent = continente)
d
continente[esa] = 'Europe'
data <- cbind(data,Continent = continente)
View(data)
continente[esa] = 'Europe'
continente[multinat] = 'Multinational
continente[multinat] = 'Multinational'
continente[multinat] = 'Multinational'
data <- cbind(data,Continent = continente)
save(data, file ="Data_new.Rdata")
save(data, file ="Data_Satellites.xlsx")
View(data)
data <- read_excel("../Dataset/Data_Satellites.xlsx", col_names = TRUE)
data <- cbind(data,Continent = continente)
View(data)
install.packages("openxlsx")
library(openxlsx)
write.xlsx(data, file = 'Data_Satellites.xlsx', rowNames = FALSE)
# per lettura dataset se prendi file da github
library(readxl)
data <- read_excel("../Dataset/Data_Satellites.xlsx", col_names = TRUE)
library(readxl)
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
library(knitr)
library(broom)
library(tidyr)
data <- data[sample(nrow(data)), ]
data$ID <- factor(seq(1:nrow(data)))
data_subs <- head(data)
time <- data_subs$'Effective Lifetime'
ggplot(data=data_subs,aes(x=ID,y=time)) +
geom_bar(stat='identity',width=0.2) +
geom_point(aes(color=Status,shape=Status),size=6) +
coord_flip()
head(Surv(time=data$'Effective Lifetime',  # T_i
event=data$Status == 'retired') # tell the object which rows have the event
)
time <- data$'Effective Lifetime'
fit <- survfit(Surv(time,Status == 'retired') ~ 1, data = data)
summary(fit)
kable(head(tidy(fit),20))
surv_median(fit) #not reached
ggsurvplot(fit, data = data,
risk.table = TRUE, # Add risk table
risk.table.col = "strata", # Change risk table color by groups
surv.median.line = "hv", # Specify median survival
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=5,
title="Kaplan-Meier Curve for Satellites Survival")
View(data)
cumulative_incidence <- 1 - fit$surv
ggsurvplot(fit, data = data,
risk.table = TRUE, # Add risk table
risk.table.col = "strata", # Change risk table color by groups
surv.median.line = "hv", # Specify median survival
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=5,
fun='event',
title="Cumulative Incidence Curve")
ggsurvplot(fit, data = data,
risk.table = TRUE, # Add risk table
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=5,
fun='cumhaz',
title="Cumulative Hazard Curve for Satellites Survival")
fit.Continent <- survfit(Surv(time,Status == 'retired') ~ Continent, data=data)
ggsurvplot(fit.Users, data = data,
risk.table = TRUE, # Add risk table
risk.table.col = "strata",
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=5,
title="Kaplan-Meier Curve for Satellites Survival by Continent")
fit.Continent <- survfit(Surv(time,Status == 'retired') ~ Continent, data=data)
ggsurvplot(fit.Continent, data = data,
risk.table = TRUE, # Add risk table
risk.table.col = "strata",
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=5,
title="Kaplan-Meier Curve for Satellites Survival by Continent")
x11()
ggsurvplot(fit.Continent, data = data,
risk.table = TRUE, # Add risk table
risk.table.col = "strata",
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=5,
title="Kaplan-Meier Curve for Satellites Survival by Continent")
x11()
ggsurvplot(fit.Continent, data = data,
risk.table = TRUE, # Add risk table
risk.table.col = "strata",
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=5,
title="Kaplan-Meier Curve for Satellites Survival by Continent")
x11()
ggsurvplot(fit.Continent, data = data,
risk.table = TRUE, # Add risk table
risk.table.col = "strata",
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=5,
title="Kaplan-Meier Curve for Satellites Survival by Continent")
windows()
ggsurvplot(fit.Continent, data = data,
risk.table = TRUE, # Add risk table
risk.table.col = "strata",
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=5,
title="Kaplan-Meier Curve for Satellites Survival by Continent")
fit.Continent <- survfit(Surv(time,Status == 'retired') ~ Continent, data=data)
ggsurvplot(fit.Continent, data = data,
risk.table = TRUE, # Add risk table
risk.table.col = "strata",
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=5,
title="Kaplan-Meier Curve for Satellites Survival by Continent")
log_rank_test <- survdiff(Surv(time, Status == 'retired') ~ Continent, data=data)
log_rank_test
# per lettura dataset se prendi file da github
library(readxl)
data <- read_excel("../Dataset/Data_Satellites.xlsx", col_names = TRUE)
# per lettura dataset se prendi file da github
library(readxl)
data <- read_excel("../Dataset/Data_Satellites.xlsx", col_names = TRUE)
library(readxl)
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
library(knitr)
library(broom)
library(tidyr)
summary(data)
View(data)
data$Country <- factor(data$Country, ordered = F)
print('Country')
table(data$Country)
data$Continent <- factor(data$Continent, ordered = F)
print('Continent')
table(data$Continent)
data$Users <- factor(data$Users, ordered = F)
print('Users')
table(data$Users)
data$Purpose <- factor(data$Purpose, ordered = F)
print('Purpose')
table(data$Purpose)
data$Orbit <- factor(data$Orbit, ordered = F)
print('Class of Orbit')
table(data$Orbit)
data$Status <- factor(data$Status, ordered = F)
print('Status')
table(data$Status)
data <- data[sample(nrow(data)), ]
View(data)
names(data)
cox.complete <- coxph(Surv(time, Status == 'retired') ~ ., data = data[,covariates])
covariates <- c("Users", "Purpose", "Longitude of GEO", "Perigee", "Apogee", "Eccentricity", "Inclination", "Period", "Mass")
cox.complete <- coxph(Surv(time, Status == 'retired') ~ ., data = data[,covariates])
time <- data$'Effective Lifetime'
Status <- data$Status
cox.complete <- coxph(Surv(time, Status == 'retired') ~ ., data = data[,covariates])
summary(cox.complete)
cox.complete <- coxph(Surv(time, Status == 'retired') ~ ., data = data[,covariates]
singular.ok = FALSE)
cox.complete <- coxph(Surv(time, Status == 'retired') ~ ., data = data[,covariates],
singular.ok = FALSE)
corr(data[,covariates])
cov(data[,covariates])
View(data)
covariates <- c("Purpose")
cox.complete <- coxph(Surv(time, Status == 'retired') ~ ., data = data[,covariates])
summary(cox.complete)
data <- data[-which(data$Purpose == "Technology Development"),]
data <- data[sample(nrow(data)), ]
Status <- data$Status
covariates.tot <- c("Purpose", "Longitude of GEO", "Perigee", "Apogee", "Eccentricity", "Inclination", "Period", "Mass")
covariates <- c("Purpose")
cox.complete <- coxph(Surv(time, Status == 'retired') ~ ., data = data[,covariates])
time <- data$'Effective Lifetime'
Status <- data$Status
covariates.tot <- c("Purpose", "Longitude of GEO", "Perigee", "Apogee", "Eccentricity", "Inclination", "Period", "Mass")
covariates <- c("Purpose")
cox.complete <- coxph(Surv(time, Status == 'retired') ~ ., data = data[,covariates])
summary(cox.complete)
# per lettura dataset se prendi file da github
library(readxl)
data <- read_excel("../Dataset/Data_Satellites.xlsx", col_names = TRUE)
library(readxl)
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
library(knitr)
library(broom)
library(tidyr)
data <- data[-which(data$Purpose == "Technology Development"),]
data$Country <- factor(data$Country, ordered = F)
print('Country')
table(data$Country)
data$Continent <- factor(data$Continent, ordered = F)
print('Continent')
table(data$Continent)
data$Users <- factor(data$Users, ordered = F)
print('Users')
table(data$Users)
data$Purpose <- factor(data$Purpose, ordered = F)
print('Purpose')
table(data$Purpose)
data$Orbit <- factor(data$Orbit, ordered = F)
print('Class of Orbit')
table(data$Orbit)
data$Status <- factor(data$Status, ordered = F)
print('Status')
table(data$Status)
data <- data[sample(nrow(data)), ]
data <- data[sample(nrow(data)), ]
time <- data$'Effective Lifetime'
Status <- data$Status
covariates.tot <- c("Purpose", "Longitude of GEO", "Perigee", "Apogee", "Eccentricity", "Inclination", "Period", "Mass")
covariates <- c("Purpose")
cox.complete <- coxph(Surv(time, Status == 'retired') ~ ., data = data[,covariates])
summary(cox.complete)
names(data$Purpose)
test1 <- cox.zph(cox2)
test1 <- cox.zph(cox.complete)
test1
cox.complete <- coxph(Surv(time, Status == 'retired') ~ ., data = data[,covariates])
summary(cox.complete)
View(data)
View(data)
log(data$Eccentricity)
hist(-log(data$Eccentricity))
log.ecc <- -log(data$Eccentricity)
cox.complete <- coxph(Surv(time, Status == 'retired') ~ log.ecc)#, data = data[,covariates])
id <- which(data$Eccentricity == 0)
log.ecc <- -log(data$Eccentricity[-id])
covariates <- c("Purpose")
cox.complete <- coxph(Surv(time, Status == 'retired') ~ log.ecc)#, data = data[,covariates])
time <- data$'Effective Lifetime'[-id]
Status <- data$Status[-id]
cox.complete <- coxph(Surv(time, Status == 'retired') ~ log.ecc)#, data = data[,covariates])
summary(cox.complete)
test1 <- cox.zph(cox.complete)
test1
cox.complete <- coxph(Surv(time, Status == 'retired') ~ log.ecc)#, data = data[,covariates])
summary(cox.complete)
time <- data$'Effective Lifetime'
Status <- data$Status
covariates.tot <- c("Purpose", "Longitude of GEO", "Perigee", "Apogee", "Inclination", "Period", "Mass")
cox.complete <- coxph(Surv(time, Status == 'retired') ~ ., data = data[,covariates])
summary(cox.complete)
cox.complete <- coxph(Surv(time, Status == 'retired') ~ ., data = data[,covariates], method = "breslow")
summary(cox.complete)
cox.complete <- coxph(Surv(time, Status == 'retired') ~ ., data = data[,covariates], method = "efron")
summary(cox.complete)
test1 <- cox.zph(cox.complete)
test1
cox.complete <- coxph(Surv(time, Status == 'retired') ~ ., data = data[,covariates])
summary(cox.complete)
purpose.mod <- data$Purpose
id <- which(data$Purpose == 'Navigation' | data$Purpose =='Space Science'   )
id <- which(data$Purpose == 'Navigation' | data$Purpose =='Space Science'   )
purpose.mod[id] = 'Communications'
cox.complete <- coxph(Surv(time, Status == 'retired') ~ purpose.mod)#, data = data[,covariates])
summary(cox.complete)
purpose.mod
table(purpose.mod)
factor(purpose.mod)
purpose.mod <- factor(purpose.mod)
cox.complete <- coxph(Surv(time, Status == 'retired') ~ purpose.mod)#, data = data[,covariates])
summary(cox.complete)
cox.complete <- coxph(Surv(time, Status == 'retired') ~ data$Purpose)#, data = data[,covariates])
summary(cox.complete)
purpose.mod <- data$Purpose
id <- which(data$Purpose == 'Navigation'   )
purpose.mod[id] = 'Communications'
purpose.mod <- factor(purpose.mod)
purpose.mod
cox.complete <- coxph(Surv(time, Status == 'retired') ~ purpose.mod)#, data = data[,covariates])
summary(cox.complete)
View(data)
# per lettura dataset se prendi file da github
library(readxl)
data <- read_excel("../Dataset/Data_Satellites.xlsx", col_names = TRUE)
library(readxl)
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
library(knitr)
library(broom)
library(tidyr)
summary(data)
data <- data[-which(data$Purpose == "Technology Development"),]
data$Country <- factor(data$Country, ordered = F)
print('Country')
table(data$Country)
data$Continent <- factor(data$Continent, ordered = F)
print('Continent')
table(data$Continent)
data$Users <- factor(data$Users, ordered = F)
print('Users')
table(data$Users)
data$Purpose <- factor(data$Purpose, ordered = F)
print('Purpose')
table(data$Purpose)
data$Orbit <- factor(data$Orbit, ordered = F)
print('Class of Orbit')
table(data$Orbit)
data$Status <- factor(data$Status, ordered = F)
print('Status')
table(data$Status)
data <- data[sample(nrow(data)), ]
plot(data$Apogee, data$`Effective Lifetime`, xlab='Apogee')
hist(data$Apogee, xlab='Apogee', main='Histogram of Apogee', prob = TRUE)
summary(data$Apogee)
plot(data$Perigee, data$`Effective Lifetime`, xlab='Perigee')
hist(data$Perigee, xlab='Perigee', main='Histogram of Perigee', prob = TRUE)
summary(data$Perigee)
data$Periodcat <- cut(data$Period, breaks=c(0, 120, 1440, Inf), labels=c("LEO", "MEO", "GEO"))
data$Apogeecat <- cut(data$Period, breaks=c(0, 2000, 35.786, Inf), labels=c("LEO", "MEO", "GEO"))
data$Perigeecat <- cut(data$Period, breaks=c(0, 2000, 35.786, Inf), labels=c("LEO", "MEO", "GEO"))
names(data)
View(data)
data$Ecccat <- cut(data$Eccentricity, breaks=c(-Inf, 0, 1, Inf), labels=c("Circ", "Elip"))
data$Ecccat <- cut(data$Eccentricity, breaks=c(-Inf, 0, 1), labels=c("Circ", "Elip"))
View(data)
names(data)
time <- data$'Effective Lifetime'
Status <- data$Status
covariates <- c("Purpose","Longitude of GEO", "Inclination", "Mass" ,"Periodcat", "Apogeecat","Perigeecat", "Ecccat" )
cox1 <- coxph(Surv(time, Status == 'retired') ~ . , data = data[,covariates])
summary(cox1)
covariates <- c("Purpose", "Inclination", "Mass" ,"Periodcat", "Apogeecat","Perigeecat", "Ecccat" )
cox1 <- coxph(Surv(time, Status == 'retired') ~ . , data = data[,covariates])
summary(cox1)
```
which(data$Perigee > 35.768)
data$Perigeecat <- cut(data$Period, breaks=c(0, 2000, 35.786, +Inf), labels=c("LEO", "MEO", "GEO"))
breaks=c(0, 2000, 35.786, +Inf)
which(data$Perigee > 35.786)
data$Perigeecat
data$Apogeecat <- cut(data$Apogee, breaks=c(0, 2000, 35.786, Inf), labels=c("LEO", "MEO", "GEO"))
data$Perigeecat <- cut(data$Perigee, breaks=c(0, 2000, 35.786, +Inf), labels=c("LEO", "MEO", "GEO"))
data$Ecccat <- cut(data$Eccentricity, breaks=c(-Inf, 0, 1), labels=c("Circ", "Elip"))
time <- data$'Effective Lifetime'
Status <- data$Status
# Longitude of Geo inutile
covariates <- c("Purpose", "Inclination", "Mass" ,"Periodcat", "Apogeecat","Perigeecat", "Ecccat" )
cox1 <- coxph(Surv(time, Status == 'retired') ~ . , data = data[,covariates])
summary(cox1)
data$Apogeecat
which(data$Apogee < 2000)
data$Apogeecat <- cut(data$Apogee, breaks=c(0, 2000, 35.786, Inf), labels=c("LEO", "MEO", "GEO"))
data$Apogeecat
data$Apogeecat <- cut(data$Apogee, breaks=c(-Inf, 2000, 35.786, Inf), labels=c("LEO", "MEO", "GEO"))
data$Apogeecat
data$Perigeecat
data$Apogeecat <- cut(data$Apogee, breaks=c(2000, 35.786, Inf), labels=c("LEO", "MEO", "GEO"))
data$Apogeecat <- cut(data$Apogee, breaks=c(0, 2000, 35.786, Inf), labels=c("LEO", "MEO", "GEO"))
data$Apogeecat
# per lettura dataset se prendi file da github
library(readxl)
data <- read_excel("../Dataset/Data_Satellites.xlsx", col_names = TRUE)
data <- data[-which(data$Purpose == "Technology Development"),]
data$Apogeecat <- cut(data$Apogee, breaks=c(0, 2000, 35.786, Inf), labels=c("LEO", "MEO", "GEO"))
covariates <- c("Purpose", "Inclination", "Mass" ,"Periodcat", "Apogeecat","Perigeecat", "Ecccat", "Orbit" )
cox1 <- coxph(Surv(time, Status == 'retired') ~ . , data = data[,covariates])
View(data)
data$Perigeecat <- cut(data$Perigee, breaks=c(0, 2000, 35.786, +Inf), labels=c("LEO", "MEO", "GEO"))
data$Ecccat <- cut(data$Eccentricity, breaks=c(-Inf, 0, 1), labels=c("Circ", "Elip"))
time <- data$'Effective Lifetime'
Status <- data$Status
# Longitude of Geo inutile
covariates <- c("Purpose", "Inclination", "Mass" ,"Periodcat", "Apogeecat","Perigeecat", "Ecccat", "Orbit" )
cox1 <- coxph(Surv(time, Status == 'retired') ~ . , data = data[,covariates])
data$Periodcat <- cut(data$Period, breaks=c(0, 120, 1440, Inf), labels=c("LEO", "MEO", "GEO"))
data$Ecccat <- cut(data$Eccentricity, breaks=c(-Inf, 0, 1), labels=c("Circ", "Elip"))
time <- data$'Effective Lifetime'
Status <- data$Status
# Longitude of Geo inutile
covariates <- c("Purpose", "Inclination", "Mass" ,"Periodcat", "Apogeecat","Perigeecat", "Ecccat", "Orbit" )
cox1 <- coxph(Surv(time, Status == 'retired') ~ . , data = data[,covariates])
summary(cox1)
time <- data$'Effective Lifetime'
Status <- data$Status
# Longitude of Geo inutile
covariates <- c("Purpose", "Inclination", "Mass" ,"Periodcat", "Apogeecat","Perigeecat", "Ecccat" )
cox1 <- coxph(Surv(time, Status == 'retired') ~ . , data = data[,covariates])
summary(cox1)
data$Apogeecat <- cut(data$Apogee, breaks=c(0, 2000, 35786, Inf), labels=c("LEO", "MEO", "GEO"))
Apogeecat
data$Apogeecat
data$Apogeecat <- cut(data$Apogee, breaks=c(0, 2000, 35786, Inf), labels=c("LEO", "MEO", "GEO"))
data$Perigeecat <- cut(data$Perigee, breaks=c(0, 2000, 35786, +Inf), labels=c("LEO", "MEO", "GEO"))
data$Ecccat <- cut(data$Eccentricity, breaks=c(-Inf, 0, 1), labels=c("Circ", "Elip"))
time <- data$'Effective Lifetime'
Status <- data$Status
# Longitude of Geo inutile
covariates <- c("Purpose", "Inclination", "Mass" ,"Periodcat", "Apogeecat","Perigeecat", "Ecccat" )
cox1 <- coxph(Surv(time, Status == 'retired') ~ . , data = data[,covariates])
summary(cox1)
which(data$Apogeecat = 'GEO')
which(data$Apogeecat == 'GEO')
table(data$Apogeecat)
data <- data[sample(nrow(data)), ]
data$Periodcat <- cut(data$Period, breaks=c(0, 120, 1440, Inf), labels=c("LEO", "MEO", "GEO"))
data$Apogeecat <- cut(data$Apogee, breaks=c(0, 2000, 35786, Inf), labels=c("LEO", "MEO", "GEO"))
data$Perigeecat <- cut(data$Perigee, breaks=c(0, 2000, 35786, +Inf), labels=c("LEO", "MEO", "GEO"))
time <- data$'Effective Lifetime'
Status <- data$Status
# Longitude of Geo inutile
covariates <- c("Purpose", "Inclination", "Mass" ,"Periodcat", "Apogeecat","Perigeecat", "Ecccat" )
cox1 <- coxph(Surv(time, Status == 'retired') ~ . , data = data[,covariates])
summary(cox1)
covariates <- c("Purpose", "Inclination", "Mass" ,"Orbit", "Ecccat" )
cox1 <- coxph(Surv(time, Status == 'retired') ~ . , data = data[,covariates])
summary(cox1)
