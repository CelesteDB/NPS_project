time <- data$`Effective Lifetime`
status <- data$Status
cox1Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 1) + Mass + Eccentricity + Users + Purpose + Continent + Orbit, data = data)
summary(cox1Ridge)
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox1Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.5) + Mass + Eccentricity + Users + Purpose + Continent + Orbit, data = data)
summary(cox1Ridge)
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox1Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.4) + Mass + Eccentricity + Users + Purpose + Continent + Orbit, data = data)
summary(cox1Ridge)
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox1Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.2) + Mass + Eccentricity + Users + Purpose + Continent + Orbit, data = data)
summary(cox1Ridge)
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
coxRidge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.2) + Mass + Eccentricity + Users + Purpose + Continent + Orbit, data = data)
summary(coxRidge)
test <- cox.zph(coxRidge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
coxRidge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.4) + Mass + Eccentricity + Users + Purpose + Continent + Orbit, data = data)
summary(coxRidge)
test <- cox.zph(coxRidge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
coxRidge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.2) + Mass + Eccentricity + Users + Purpose + Continent + Orbit, data = data)
summary(coxRidge)
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox2Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.2) + Mass + Eccentricity + Users + strata(Purpose) + Continent + Orbit, data = data)
summary(cox2Ridge)
test <- cox.zph(cox2Ridge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.2) + Mass + Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.1) + Mass + Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.01) + Mass + Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.05) + Mass + Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.02) + Mass + Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.05) + Mass + Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
ggcoxdiagnostics(cox3Ridge, type = "scaledsch")
ggcoxdiagnostics(cox3Ridge, type = "deviance")
AIC.cox6 = AIC(cox6)
AIC = AIC(cox3Ridge)
AIC
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 1) + Mass + Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.8) + Mass + Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
ggcoxdiagnostics(cox3Ridge, type = "scaledsch")
ggcoxdiagnostics(cox3Ridge, type = "deviance")
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox2Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.1) + Mass + Eccentricity + Users + strata(Purpose) + Continent + Orbit, data = data)
summary(cox2Ridge)
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.1) + Mass + Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
ggcoxdiagnostics(cox3Ridge, type = "scaledsch")
ggcoxdiagnostics(cox3Ridge, type = "deviance")
library(readxl)
data <- read_excel("../Dataset/TrainingSet.xlsx", col_names = TRUE)
library(readxl)
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
library(knitr)
library(broom)
library(tidyr)
i <- which(data$Purpose == 'Navigation' | data$Orbit == 'Elliptical' | data$Continent == 'Africa' | data$Continent == 'Multinational' | data$Continent == 'Oceania' )
data <- data[-i,]
table(data$Users, data$Status)
table(data$Purpose, data$Status)
table(data$Orbit, data$Status)
table(data$Continent, data$Status)
table(data$Status)
i <- which(data$Eccentricity == 0)
data$Eccentricity[i] = 1
data$log.Eccentricity <- -log(data$Eccentricity)
covariates.num <- c( "Perigee" ,"Apogee", 'log.Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'log.Eccentricity', "Inclination", "Period", "Mass")
cor(data.numeric)
pairs(data.numeric, pch = 19)
# Alte correlazioni per: Apogeo - Perigeo, Inclination - Periego, Inclination - Apogeo, Periodo - Perigeo, Periodo Apogeo, Periodo - Inclination
# Metto in ridge Apogeo, Perigeo, Inclination e Periodo per cercare di ridurre collinearità
pairs(data.numeric, pch = 19)
covariates.num <- c( "Perigee" ,"Apogee", 'log.Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'log.Eccentricity', "Inclination", "Period", "Mass")
cor(data.numeric)
pairs(data.numeric, pch = 19)
# Alte correlazioni per: Apogeo - Perigeo, Inclination - Periego, Inclination - Apogeo, Periodo - Perigeo, Periodo Apogeo, Periodo - Inclination
# Metto in ridge Apogeo, Perigeo, Inclination e Periodo per cercare di ridurre collinearità
cor(data.numeric)
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox1Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.2) + Mass + log.Eccentricity + Users + Purpose + Continent + Orbit, data = data)
summary(cox1Ridge)
test <- cox.zph(cox1Ridge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox2Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.2) + Mass + Eccentricity + Users + strata(Purpose) + Continent + Orbit, data = data)
summary(cox2Ridge)
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox2Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.2) + Mass + log.Eccentricity + Users + strata(Purpose) + Continent + Orbit, data = data)
summary(cox2Ridge)
test <- cox.zph(cox2Ridge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.1) + Mass + log.Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
ggcoxdiagnostics(cox3Ridge, type = "deviance")
AIC = AIC(cox3Ridge)
time <- data$`Effective Lifetime`
status <- data$Status
cox5bis <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity   +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox5bis)
test <- cox.zph(cox5bis)
test
AIC.cox5bis = AIC(cox5bis)
library(readxl)
data <- read_excel("../dataset/TrainingSet.xlsx", col_names = TRUE)
library(readxl)
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
library(knitr)
library(broom)
library(tidyr)
summary(data)
i <- which(data$Purpose == 'Navigation' | data$Orbit == 'Elliptical' | data$Continent == 'Africa' | data$Continent == 'Multinational' | data$Continent == 'Oceania' )
data <- data[-i,]
table(data$Users, data$Status)
table(data$Purpose, data$Status)
table(data$Orbit, data$Status)
table(data$Continent, data$Status)
table(data$Status)
time <- data$`Effective Lifetime`
status <- data$Status
cox5bis <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity   +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
i <- which(data$Eccentricity == 0)
data$Eccentricity[i] = 1
data$log.Eccentricity <- -log(data$Eccentricity)
time <- data$`Effective Lifetime`
status <- data$Status
cox5bis <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity   +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox5bis)
nmaes(data)
names(data)
library(readxl)
data <- read_excel("../dataset/TrainingSet.xlsx", col_names = TRUE)
library(readxl)
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
library(knitr)
library(broom)
library(tidyr)
summary(data)
table(data$Users, data$Status)
table(data$Purpose, data$Status)
table(data$Orbit, data$Status)
table(data$Continent, data$Status)
i <- which(data$Purpose == 'Navigation' | data$Orbit == 'Elliptical' | data$Continent == 'Africa' | data$Continent == 'Multinational' | data$Continent == 'Oceania' )
data <- data[-i,]
table(data$Users, data$Status)
table(data$Purpose, data$Status)
table(data$Orbit, data$Status)
table(data$Continent, data$Status)
table(data$Status)
i <- which(data$Eccentricity == 0)
data$Eccentricity[i] = 1
data$log.Eccentricity <- -log(data$Eccentricity)
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c( "Perigee" ,"Apogee", 'log.Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
cox1bis <- coxph(Surv(time,status == 'retired') ~ ., data = data[,covariates])
summary(cox1bis)
perigee_coef <- cox1bis$coefficients[1]
perigee_coef
n <- nrow(data)
perigee_coef <- cox1bis$coefficients[1]
B <- 1000
T.perigee = numeric(B)
set.seed(2022)
for(b in 1:B) {
boot_id <- sample(x = 1:n,size = n,replace = TRUE)
df_boot <- dataset[boot_id,]
fit_cox_boot <- coxph(Surv(time,status == 'retired') ~ ., data = df_boot[,covariates])
T.perigee[b] = fit_cox_boot$coefficients[1]
}
n <- nrow(data)
perigee_coef <- cox1bis$coefficients[1]
B <- 1000
T.perigee = numeric(B)
set.seed(2022)
for(b in 1:B) {
boot_id <- sample(x = 1:n,size = n,replace = TRUE)
df_boot <- data[boot_id,]
fit_cox_boot <- coxph(Surv(time,status == 'retired') ~ ., data = df_boot[,covariates])
T.perigee[b] = fit_cox_boot$coefficients[1]
}
alpha <- 0.05
right.quantile.funding <- quantile(T.perigee, 1 - alpha/2)
left.quantile.funding <- quantile(T.perigee, alpha/2)
CI.RP.funding <-
c(
funding_coef - (right.quantile.funding - perigee_coef),
funding_coef,
funding_coef - (left.quantile.funding- perigee_coef))
n <- nrow(data)
perigee_coef <- cox1bis$coefficients[1]
B <- 1000
T.perigee = numeric(B)
set.seed(2022)
for(b in 1:B) {
boot_id <- sample(x = 1:n,size = n,replace = TRUE)
df_boot <- data[boot_id,]
fit_cox_boot <- coxph(Surv(time,status == 'retired') ~ ., data = df_boot[,covariates])
T.perigee[b] = fit_cox_boot$coefficients[1]
}
alpha <- 0.05
right.quantile.funding <- quantile(T.perigee, 1 - alpha/2)
left.quantile.funding <- quantile(T.perigee, alpha/2)
CI.RP.funding <-
c(
perigee_coef - (right.quantile.funding - perigee_coef),
perigee_coef,
perigee_coef - (left.quantile.funding- perigee_coef))
names(CI.RP.funding)=c('lwr','pointwise','upr')
CI.RP.funding
n <- nrow(data)
perigee_coef <- cox1bis$coefficients[1]
B <- 1000
T.perigee = numeric(B)
set.seed(2022)
for(b in 1:B) {
boot_id <- sample(x = 1:n,size = n,replace = TRUE)
df_boot <- data[boot_id,]
fit_cox_boot <- coxph(Surv(time,status == 'retired') ~ ., data = df_boot[,covariates])
T.perigee[b] = fit_cox_boot$coefficients[1]
}
alpha <- 0.05
right.quantile <- quantile(T.perigee, 1 - alpha/2)
left.quantile <- quantile(T.perigee, alpha/2)
CI.RP.perigee <-
c(
perigee_coef - (right.quantile - perigee_coef),
perigee_coef,
perigee_coef - (left.quantile- perigee_coef))
names(CI.RP.perigee)=c('lwr','pointwise','upr')
CI.RP.perigee
time <- data$`Effective Lifetime`
status <- data$Status
covariates <- c("Apogee", 'log.Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
cox2bis <- coxph(Surv(time,status == 'retired') ~ ., data = data[,covariates])
summary(cox2bis)
time <- data$`Effective Lifetime`
status <- data$Status
cox2bis <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity + Inclination + Period +
Mass + Users + strata(Purpose) + Continent + Orbit, data = data)
summary(cox2bis)
n <- nrow(data)
inc_coef <- cox2bis$coefficients[3]
B <- 1000
T.Inc = numeric(B)
set.seed(2022)
for(b in 1:B) {
boot_id <- sample(x = 1:n,size = n,replace = TRUE)
df_boot <- data[boot_id,]
fit_cox_boot <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity + Inclination + Period +
Mass + Users + strata(Purpose) + Continent + Orbit, data = df_boot)
T.Inc[b] = fit_cox_boot$coefficients[1]
}
n <- nrow(data)
inc_coef <- cox2bis$coefficients[3]
B <- 1000
T.Inc = numeric(B)
set.seed(2022)
for(b in 1:B) {
boot_id <- sample(x = 1:n,size = n,replace = TRUE)
df_boot <- data[boot_id,]
fit_cox_boot <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity + Inclination + Period +
Mass + Users + strata(Purpose) + Continent + Orbit, data = df_boot)
T.Inc[b] = fit_cox_boot$coefficients[3]
}
alpha <- 0.05
right.quantile <- quantile(T.Inc, 1 - alpha/2)
left.quantile <- quantile(T.Inc, alpha/2)
CI.RP.Inc <-
c(
inc_coef - (right.quantile - inc_coef),
inc_coef,
inc_coef - (left.quantile- inc_coef))
names(CI.RP.perigee)=c('lwr','pointwise','upr')
CI.RP.Inc
time <- data$`Effective Lifetime`
status <- data$Status
cox3bis <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity  + Period +
Mass + Users + strata(Purpose) + Continent + Orbit, data = data)
summary(cox3bis)
time <- data$`Effective Lifetime`
status <- data$Status
cox4bis <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity  + Period +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox4bis)
n <- nrow(data)
per_coef <- cox4bis$coefficients[3]
B <- 1000
T.Periodo = numeric(B)
set.seed(2022)
for(b in 1:B) {
boot_id <- sample(x = 1:n,size = n,replace = TRUE)
df_boot <- data[boot_id,]
fit_cox_boot <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity  + Period +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = df_boot)
T.Periodo[b] = fit_cox_boot$coefficients[3]
}
alpha <- 0.05
right.quantile <- quantile(T.Periodo, 1 - alpha/2)
left.quantile <- quantile(T.Periodo, alpha/2)
CI.RP.Periodo <-
c(
per_coef - (right.quantile - per_coef),
per_coef,
per_coef - (left.quantile- per_coef))
names(CI.RP.perigee)=c('lwr','pointwise','upr')
CI.RP.Periodo
library(readxl)
data <- read_excel("../dataset/TrainingSet.xlsx", col_names = TRUE)
library(readxl)
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
library(knitr)
library(broom)
library(tidyr)
summary(data)
table(data$Users, data$Status)
table(data$Purpose, data$Status)
table(data$Orbit, data$Status)
table(data$Continent, data$Status)
i <- which(data$Purpose == 'Navigation' | data$Orbit == 'Elliptical' | data$Continent == 'Africa' | data$Continent == 'Multinational' | data$Continent == 'Oceania' )
data <- data[-i,]
table(data$Users, data$Status)
table(data$Purpose, data$Status)
table(data$Orbit, data$Status)
table(data$Continent, data$Status)
table(data$Status)
i <- which(data$Eccentricity == 0)
data$Eccentricity[i] = 1
data$log.Eccentricity <- -log(data$Eccentricity)
time <- data$`Effective Lifetime`
status <- data$Status
cox <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity   +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox)
test.set <- read_excel("../Dataset/TestSet.xlsx", col_names = TRUE)
i <- which(test.set$Purpose == 'Navigation' | test.set$Orbit == 'Elliptical' | test.set$Continent == 'Africa' | test.set$Continent == 'Multinational' | test.set$Continent == 'Oceania' )
test.set <- test.set[-i,]
table(test.set$Users, test.set$Status)
table(test.set$Purpose, test.set$Status)
table(test.set$Orbit, test.set$Status)
table(test.set$Continent, test.set$Status)
table(test.set$Status)
i <- which(test.set$Eccentricity == 0)
test.set$Eccentricity[i] = 1
test.set$log.Eccentricity <- -log(test.set$Eccentricity)
coxed <- coxed::coxed(cox, newdata = test.set, method="npsf", bootstrap = TRUE, B=750)
predicted_lifetime <- coxed$exp.dur
if (!require("devtools")){
install.packages("devtools")
}
devtools::install_github("zhimeir/cfsurvival")
View(test.set)
covariates <-c('Apogee','log.Eccentricity','Mass','Users', 'Purpose', 'Continent', 'Orbit' )
X.test <- test.set[, covariates]
X.train <- data[, covariates]
View(data)
Event <- iif(data$Status == 'censored', FALSE, TRUE )
Event <- iff(data$Status == 'censored', FALSE, TRUE )
covariates <-c('Apogee','log.Eccentricity','Mass','Users', 'Purpose', 'Continent', 'Orbit' )
X.test <- test.set[, covariates]
X.train <- data[, covariates]
Event <- ifelse(data$Status == 'censored', FALSE, TRUE )
Event
set.seed(24601)
n <- 2000
X <- runif(n, 0, 2)
T <- exp(X + rnorm(n, 0, 1))
C <- rexp(n, rate = 0.05)
event <- (T <= C)
censored_T <- pmin(T, C)
data <- data.frame(X = X, C = C, event = event, censored_T = censored_T)
# Prediction point
n_test <- 1000
X_test <- runif(n_test, 0, 2)
T_test <- exp(X_test + rnorm(n,0,1))
# Running cfsurvival with c0 = 30
c0 <- 30
pr_list <- rep(0.5, n)
pr_new_list <- rep(0.5, n_test)
res <- cfsurv(x = X_test, c_list = c0, pr_list = pr_list, pr_new_list = pr_new_list,
Xtrain = X, C = C, event = event, time = censored_T,
alpha = 0.1, model = "aft")
library('cfsurvival)
library('cfsurvival')
res <- cfsurv(x = X.test, Xtrain = X.train, C = data$`Effective Lifetime`, event = Event, time = data$`Effective Lifetime`,
library('cfsurvival')
c
library('cfsurvival')
set.seed(24601)
n <- 2000
X <- runif(n, 0, 2)
T <- exp(X + rnorm(n, 0, 1))
C <- rexp(n, rate = 0.05)
event <- (T <= C)
censored_T <- pmin(T, C)
data <- data.frame(X = X, C = C, event = event, censored_T = censored_T)
# Prediction point
n_test <- 1000
X_test <- runif(n_test, 0, 2)
T_test <- exp(X_test + rnorm(n,0,1))
# Running cfsurvival with c0 = 30
c0 <- 30
pr_list <- rep(0.5, n)
pr_new_list <- rep(0.5, n_test)
res <- cfsurv(x = X_test, c_list = c0, pr_list = pr_list, pr_new_list = pr_new_list,
Xtrain = X, C = C, event = event, time = censored_T,
alpha = 0.1, model = "aft")
# Examine the result
cat(sprintf("The coverage is %.3f.\n", mean(res <= T_test)))
res
