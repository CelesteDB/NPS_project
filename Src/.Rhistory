dummy_data <- dummy_cols(dummy_data, select_columns = "Continent", remove_first_dummy = TRUE)
# dataset senza Purpose, Users, Continent and Orbit
dummy_data <- dummy_data[,c(1:2,6:17,19:33)]
View(dummy_data)
#install.packages("fastDummies")
library(fastDummies)
# USERS : Levels: Civil Commercial Government Military
dummy_data <- dummy_cols(data, select_columns = "Users", remove_first_dummy = TRUE)
# PURPOSE : Levels: Communications Earth Observation Navigation Space Science Technology Development
dummy_data <- dummy_cols(dummy_data, select_columns = "Purpose", remove_first_dummy = TRUE)
# ORBIT : Levels: Elliptical GEO LEO MEO
dummy_data <- dummy_cols(dummy_data, select_columns = "Orbit", remove_first_dummy = TRUE)
# CONTINENT: Levels: Africa Americas Asia Europe Multinational Oceania
dummy_data <- dummy_cols(dummy_data, select_columns = "Continent", remove_first_dummy = TRUE)
View(dummy_data)
# dataset senza Purpose, Users, Continent and Orbit
dummy_data <- dummy_data[,c(1:2,7:17,19:27)]
library(glmnet)
time <- dummy_data$`Effective Lifetime`
status <- dummy_data$Status
covariates <-
c(
"Perigee" ,
"Apogee",
"Eccentricity" ,
"Inclination",
"Period",
"Mass",
"Users_Commercial",
"Users_Government",
"Users_Military",
"Purpose_Earth Observation",
"Purpose_Navigation",
"Purpose_Space Science",
"Purpose_Technology Development",
"Orbit_GEO",
"Orbit_LEO",
"Orbit_MEO",
"Continent_Americas",
"Continent_Asia",
"Continent_Europe",
"Continent_Multinational",
"Continent_Oceania"
)
n_coef = length(covariates)
lambda.grid <- 10^seq(2, -5 ,length = 100)
# Adatta un modello di regressione di Cox penalizzato usando glmnet
# alpha = 1 per la penalizzazione L2 (Ridge)
# alpha = 0 per la penalizzazione L1 (Lasso)
cox_model <- cv.glmnet(x = as.matrix(dummy_data[,covariates]), y = Surv(time,status == 'retired'), family = "cox", alpha = 0.6, lambda = lambda.grid)
names(dummy_data)
library(glmnet)
time <- dummy_data$`Effective Lifetime`
status <- dummy_data$Status
covariates <-
c(
"Perigee" ,
"Apogee",
"Eccentricity" ,
"Inclination",
"Period",
"Mass",
"Users_Commercial",
"Users_Government",
"Users_Military",
"Purpose_Earth Observation",
"Purpose_Space Science",
"Purpose_Technology Development",
"Orbit_LEO",
"Continent_Asia",
"Continent_Europe"
)
n_coef = length(covariates)
lambda.grid <- 10^seq(2, -5 ,length = 100)
# Adatta un modello di regressione di Cox penalizzato usando glmnet
# alpha = 1 per la penalizzazione L2 (Ridge)
# alpha = 0 per la penalizzazione L1 (Lasso)
cox_model <- cv.glmnet(x = as.matrix(dummy_data[,covariates]), y = Surv(time,status == 'retired'), family = "cox", alpha = 0.6, lambda = lambda.grid)
# PROVA A CAMBIARE VALORE DI ALPHA ---> ELASTIC NET FORSE è MEGLIO
print(cox_model)
bestlambda <- cox_model$lambda.min # con lasso lambda è quasi zero
plot(cox_model)
abline(v=log(bestlambda), lty=1)
fitAtLmin <- glmnet(x = as.matrix(dummy_data[,covariates]),  y = Surv(time,status == 'retired') ,family="cox",lambda=bestlambda)
coef <- coef(fitAtLmin)
coef
time <- data$`Effective Lifetime`
status <- data$Status
covariates.num <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
cox1 <- coxph(Surv(time,status == 'retired') ~ ridge(data.numeric, theta = 1) + Users + Purpose + Continent + Orbit, data = data)
summary(cox1)
time <- data$`Effective Lifetime`
status <- data$Status
covariates.num <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
cox1 <- coxph(Surv(time,status == 'retired') ~ ridge(as.matrix(data[,covariates.num]), theta = 1) + Users + Purpose + Continent + Orbit, data = data)
summary(cox1)
time <- data$`Effective Lifetime`
status <- data$Status
covariates.num <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
cox1 <- coxph(Surv(time,status == 'retired') ~ ridge(Perigee, theta = 1) + Users + Purpose + Continent + Orbit, data = data)
summary(cox1)
time <- data$`Effective Lifetime`
status <- data$Status
covariates.num <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
cox1 <- coxph(Surv(time,status == 'retired') ~ ridge(as.matrix(data[,covariates.num]), theta = 1) + Users + Purpose + Continent + Orbit, data = data)
summary(cox1)
lfit2 <- survreg(Surv(time, status) ~ sex + ridge(age, ph.ecog, theta=1), lung)
summary(lift2)
summary(lfit2)
time <- data$`Effective Lifetime`
status <- data$Status
covariates.num <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
cox1 <- coxph(Surv(time,status == 'retired') ~ ridge(data.numeric, theta = 1) + Users + Purpose + Continent + Orbit, data = data)
summary(cox1)
time <- data$`Effective Lifetime`
status <- data$Status
covariates.num <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
cox1 <- coxph(Surv(time,status == 'retired') ~ ridge(data.numeric, theta = 5) + Users + Purpose + Continent + Orbit, data = data)
summary(cox1)
# Utilizza la funzione nominal2coef per ottenere i nomi delle variabili nella summary
coef_names <- rownames(nominal2coef(cox1))
install.packages("rms")
# Utilizza la funzione nominal2coef per ottenere i nomi delle variabili nella summary
library(rms)
coef_names <- rownames(nominal2coef(cox1))
# Utilizza la funzione label2 per ottenere i nomi delle variabili nella summary
label_names <- label2(data.numeric)
# Assegna i nomi delle variabili alla matrice dei coefficienti
colnames(coef(cox1)) <- c("Perigee", "Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
coef(cox1)
# Assegna i nomi delle variabili alla matrice dei coefficienti
names(coef(cox1)) <- c("Perigee", "Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
names(coef(cox1))
names(coef(cox1)) <- c("Perigee", "Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
names(coef(cox1))
names(coef(cox1)) = c("Perigee", "Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
# Assegna i nomi delle variabili alla matrice dei coefficienti
colnames(coef(cox1))[1] <- c("Perigee", "Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
# Ottieni i nomi delle variabili dalla matrice di design
var_names <- colnames(data.numeric)
# Assegna i nomi delle variabili alla summary
label(cox1) <- lrm::label(cox1) <- var_names
# Ottieni i nomi delle variabili dalla matrice di design
var_names <- colnames(data.numeric)
# Assegna i nomi delle variabili alla summary
label(cox1) <- rms::label(cox1) <- var_names
View(data.numeric)
time <- data$`Effective Lifetime`
status <- data$Status
covariates.num <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
data.numeric <- as.dataframe(data.numeric)
data.numeric <- data.frame(data.numeric)
View(data.numeric)
cox1 <- coxph(Surv(time,status == 'retired') ~ ridge(data.numeric, theta = 5) + Users + Purpose + Continent + Orbit, data = data)
time <- data$`Effective Lifetime`
status <- data$Status
covariates.num <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
data.numeric
library(readxl)
data <- read_excel("../Dataset/TrainingSet.xlsx", col_names = TRUE)
library(readxl)
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
library(knitr)
library(broom)
library(tidyr)
summary(data)
i <- which(data$Purpose == 'Navigation' | data$Orbit == 'Elliptical' | data$Continent == 'Africa' | data$Continent == 'Multinational' | data$Continent == 'Oceania' )
data <- data[-i,]
time <- data$`Effective Lifetime`
status <- data$Status
covariates.num <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
cox1 <- coxph(Surv(time,status == 'retired') ~ ridge(data.numeric, theta = 5) + Users + Purpose + Continent + Orbit, data = data)
cox2 <-
summary(cox1)
cox2
time <- data$`Effective Lifetime`
status <- data$Status
covariates.num <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
cox1 <- coxph(Surv(time,status == 'retired') ~ ridge(data.numeric, theta = 1) + Users + Purpose + Continent + Orbit, data = data)
summary(cox1)
time <- data$`Effective Lifetime`
status <- data$Status
covariates.num <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
cox1 <- coxph(Surv(time,status == 'retired') ~ ridge(data.numeric, theta = 0.1) + Users + Purpose + Continent + Orbit, data = data)
summary(cox1)
time <- data$`Effective Lifetime`
status <- data$Status
covariates.num <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
cox1 <- coxph(Surv(time,status == 'retired') ~ ridge(data.numeric, theta = 0.01) + Users + Purpose + Continent + Orbit, data = data)
summary(cox1)
time <- data$`Effective Lifetime`
status <- data$Status
covariates.num <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
cox1 <- coxph(Surv(time,status == 'retired') ~ ridge(data.numeric, theta = 0.001) + Users + Purpose + Continent + Orbit, data = data)
summary(cox1)
time <- data$`Effective Lifetime`
status <- data$Status
covariates.num <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
cox1 <- coxph(Surv(time,status == 'retired') ~ ridge(data.numeric, theta = 0.001) + Users + Purpose + Continent + Orbit, data = data)
summary(cox1)
test <- cox.zph(cox1)
libray('MASS')
library('MASS')
summary.ridge(cox1)
time <- data$`Effective Lifetime`
status <- data$Status
covariates.num <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
cox1 <- coxph(Surv(time,status == 'retired') ~ ridge(data.numeric, theta = 0.001) + Users + Purpose + Continent + Orbit, data = data)
summary.ridge(cox1)
time <- data$`Effective Lifetime`
status <- data$Status
covariates.num <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
cox1 <- coxph(Surv(time,status == 'retired') ~ ridge(data.numeric, theta = 0.001) + Users + Purpose + Continent + Orbit, data = data)
summary(cox1)
AIC(cox1)
covariates <- c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
ridge <- cox.ridge(Surv(time,status == 'retired') ~ ., lambda = 1, lambdaFixed = FALSE, eps = 10e-6, data = data = data[,covariates], iter.max = 200, mon = FALSE)
ridge <- cox.ridge(Surv(time,status == 'retired') ~ . , lambda = 1, lambdaFixed = FALSE, eps = 10e-6, data = data[,covariates], iter.max = 200, mon = FALSE)
install.packages('CoxRidge')
ridge <- cox.ridge(Surv(time,status == 'retired') ~ . , lambda = 1, lambdaFixed = FALSE, eps = 10e-6, data = data[,covariates], iter.max = 200, mon = FALSE)
time <- data$`Effective Lifetime`
status <- data$Status
covariates.num <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
cox1 <- coxph(Surv(time,status == 'retired') ~ ridge(data.numeric, theta = 0.001) + Users + Purpose + Continent + Orbit, data = data)
summary(cox1)
covariates <- c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass", "Users", "Purpose", "Continent", "Orbit")
ridge <- cox.ridge(Surv(time,status == 'retired') ~ . , lambda = 1, lambdaFixed = FALSE, eps = 10e-6, data = data[,covariates], iter.max = 200, mon = FALSE)
library('CoxRidge')
install.packages('CoxRidge')
library(glmnet)
time <- dummy_data$`Effective Lifetime`
status <- dummy_data$Status
covariates <-
c(
"Perigee" ,
"Apogee",
"Eccentricity" ,
"Inclination",
"Period",
"Mass",
"Users_Commercial",
"Users_Government",
"Users_Military",
"Purpose_Earth Observation",
"Purpose_Space Science",
"Purpose_Technology Development",
"Orbit_LEO",
"Continent_Asia",
"Continent_Europe"
)
n_coef = length(covariates)
lambda.grid <- 10^seq(2, -5 ,length = 100)
# Adatta un modello di regressione di Cox penalizzato usando glmnet
# alpha = 1 per la penalizzazione L2 (Ridge)
# alpha = 0 per la penalizzazione L1 (Lasso)
cox_model <- cv.glmnet(x = as.matrix(dummy_data[,covariates]), y = Surv(time,status == 'retired'), family = "cox", alpha = 0.1, lambda = lambda.grid)
# PROVA A CAMBIARE VALORE DI ALPHA ---> ELASTIC NET FORSE è MEGLIO
print(cox_model)
bestlambda <- cox_model$lambda.min # con lasso lambda è quasi zero
plot(cox_model)
abline(v=log(bestlambda), lty=1)
fitAtLmin <- glmnet(x = as.matrix(dummy_data[,covariates]),  y = Surv(time,status == 'retired') ,family="cox",lambda=bestlambda)
coef <- coef(fitAtLmin)
coef
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
cor(data_num)
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'Eccentricity', "Inclination", "Period", "Mass")
cor(data.numeric)
pairs(data.numeric, pch = 19)
time <- data$`Effective Lifetime`
status <- data$Status
cox1Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee + Perigee + Inclination + Period, theta = 0.001) + Mass + Eccentricity + Users + Purpose + Continent + Orbit, data = data)
summary(cox1)
time <- data$`Effective Lifetime`
status <- data$Status
cox1Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.001) + Mass + Eccentricity + Users + Purpose + Continent + Orbit, data = data)
summary(cox1)
time <- data$`Effective Lifetime`
status <- data$Status
cox1Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.001) + Mass + Eccentricity + Users + Purpose + Continent + Orbit, data = data)
summary(cox1Ridge)
time <- data$`Effective Lifetime`
status <- data$Status
cox1Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 1) + Mass + Eccentricity + Users + Purpose + Continent + Orbit, data = data)
summary(cox1Ridge)
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox1Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.5) + Mass + Eccentricity + Users + Purpose + Continent + Orbit, data = data)
summary(cox1Ridge)
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox1Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.4) + Mass + Eccentricity + Users + Purpose + Continent + Orbit, data = data)
summary(cox1Ridge)
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox1Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.2) + Mass + Eccentricity + Users + Purpose + Continent + Orbit, data = data)
summary(cox1Ridge)
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
coxRidge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.2) + Mass + Eccentricity + Users + Purpose + Continent + Orbit, data = data)
summary(coxRidge)
test <- cox.zph(coxRidge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
coxRidge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.4) + Mass + Eccentricity + Users + Purpose + Continent + Orbit, data = data)
summary(coxRidge)
test <- cox.zph(coxRidge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
coxRidge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.2) + Mass + Eccentricity + Users + Purpose + Continent + Orbit, data = data)
summary(coxRidge)
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox2Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.2) + Mass + Eccentricity + Users + strata(Purpose) + Continent + Orbit, data = data)
summary(cox2Ridge)
test <- cox.zph(cox2Ridge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.2) + Mass + Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.1) + Mass + Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.01) + Mass + Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.05) + Mass + Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.02) + Mass + Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.05) + Mass + Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
ggcoxdiagnostics(cox3Ridge, type = "scaledsch")
ggcoxdiagnostics(cox3Ridge, type = "deviance")
AIC.cox6 = AIC(cox6)
AIC = AIC(cox3Ridge)
AIC
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 1) + Mass + Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.8) + Mass + Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
ggcoxdiagnostics(cox3Ridge, type = "scaledsch")
ggcoxdiagnostics(cox3Ridge, type = "deviance")
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox2Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.1) + Mass + Eccentricity + Users + strata(Purpose) + Continent + Orbit, data = data)
summary(cox2Ridge)
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.1) + Mass + Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
ggcoxdiagnostics(cox3Ridge, type = "scaledsch")
ggcoxdiagnostics(cox3Ridge, type = "deviance")
library(readxl)
data <- read_excel("../Dataset/TrainingSet.xlsx", col_names = TRUE)
library(readxl)
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
library(knitr)
library(broom)
library(tidyr)
i <- which(data$Purpose == 'Navigation' | data$Orbit == 'Elliptical' | data$Continent == 'Africa' | data$Continent == 'Multinational' | data$Continent == 'Oceania' )
data <- data[-i,]
table(data$Users, data$Status)
table(data$Purpose, data$Status)
table(data$Orbit, data$Status)
table(data$Continent, data$Status)
table(data$Status)
i <- which(data$Eccentricity == 0)
data$Eccentricity[i] = 1
data$log.Eccentricity <- -log(data$Eccentricity)
covariates.num <- c( "Perigee" ,"Apogee", 'log.Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'log.Eccentricity', "Inclination", "Period", "Mass")
cor(data.numeric)
pairs(data.numeric, pch = 19)
# Alte correlazioni per: Apogeo - Perigeo, Inclination - Periego, Inclination - Apogeo, Periodo - Perigeo, Periodo Apogeo, Periodo - Inclination
# Metto in ridge Apogeo, Perigeo, Inclination e Periodo per cercare di ridurre collinearità
pairs(data.numeric, pch = 19)
covariates.num <- c( "Perigee" ,"Apogee", 'log.Eccentricity', "Inclination", "Period", "Mass")
data.numeric <-as.matrix(data[,covariates.num])
colnames(data.numeric) <-  c( "Perigee" ,"Apogee", 'log.Eccentricity', "Inclination", "Period", "Mass")
cor(data.numeric)
pairs(data.numeric, pch = 19)
# Alte correlazioni per: Apogeo - Perigeo, Inclination - Periego, Inclination - Apogeo, Periodo - Perigeo, Periodo Apogeo, Periodo - Inclination
# Metto in ridge Apogeo, Perigeo, Inclination e Periodo per cercare di ridurre collinearità
cor(data.numeric)
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox1Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.2) + Mass + log.Eccentricity + Users + Purpose + Continent + Orbit, data = data)
summary(cox1Ridge)
test <- cox.zph(cox1Ridge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox2Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.2) + Mass + Eccentricity + Users + strata(Purpose) + Continent + Orbit, data = data)
summary(cox2Ridge)
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox2Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.2) + Mass + log.Eccentricity + Users + strata(Purpose) + Continent + Orbit, data = data)
summary(cox2Ridge)
test <- cox.zph(cox2Ridge)
test
time <- data$`Effective Lifetime`
status <- data$Status
# Penalizzazione theta/2
cox3Ridge <- coxph(Surv(time,status == 'retired') ~ ridge(Apogee, Perigee, Inclination, Period, theta = 0.1) + Mass + log.Eccentricity + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox3Ridge)
test <- cox.zph(cox3Ridge)
test
ggcoxdiagnostics(cox3Ridge, type = "deviance")
AIC = AIC(cox3Ridge)
time <- data$`Effective Lifetime`
status <- data$Status
cox5bis <- coxph(Surv(time,status == 'retired') ~  Apogee + log.Eccentricity   +
Mass + Users + strata(Purpose) + Continent + strata(Orbit), data = data)
summary(cox5bis)
test <- cox.zph(cox5bis)
test
AIC.cox5bis = AIC(cox5bis)
