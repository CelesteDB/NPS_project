knitr::include_graphics(path="linear_regression_formulae.png")
library(rgl)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
knitr::knit_hooks$set(webgl = hook_webgl)
knitr::include_graphics(path="linear_regression_formulae.png")
library(rgl)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
knitr::knit_hooks$set(webgl = hook_webgl)
#knitr::include_graphics(path="linear_regression_formulae.png")
ggplot2::theme_set(ggplot2::theme_bw())
.extracode {
library(ISLR2)
library(car)
data(Wage)
View(Wage)
data(Wage)
wage <- Wage$wage
age <- Wage$age
plot(age, wage)
m_linear=lm(wage ~ age)
summary(m_linear)
age.grid=seq(range(age)[1],range(age)[2],by=0.5)
preds=predict(m_linear,list(age=age.grid),se=T)
se.bands=cbind(preds$fit +2* preds$se.fit ,preds$fit -2* preds$se.fit)
plot(age ,wage ,xlim=range(age.grid) ,cex =.5, col =" darkgrey ",main='Linear Fit')
lines(age.grid,preds$fit ,lwd =2, col =" blue")
matlines (age.grid ,se.bands ,lwd =1, col =" blue",lty =3)
X <- cbind(1,age)  # design matrix including intercept
N <- nrow(X)
beta_manual <- c(solve(crossprod(X), crossprod(X, wage)))
y.hat <- c(X%*%beta_manual)
res_manual <- y.hat - wage
Cov_beta <- sum(res_manual^2)/(N-2)*solve(crossprod(X))
X_grid <- cbind(1,age.grid)
preds_manual_fit <- c(X_grid%*%beta_manual)
preds_manual_fit_se <- sqrt(sapply(1:nrow(X_grid), function(i) t(X_grid[i,])%*%Cov_beta%*%X_grid[i,]))
preds_manual_fit_se
m_quad=lm(wage ~ age + I(age^2))
summary(m_quad)
preds=predict(m_quad,list(age=age.grid),se=T)
se.bands=cbind(preds$fit +2* preds$se.fit ,preds$fit -2* preds$se.fit)
plot(age ,wage ,xlim=range(age.grid) ,cex =.5, col =" darkgrey ",main='Quadratic Fit')
lines(age.grid,preds$fit ,lwd =2, col =" blue")
matlines (age.grid ,se.bands ,lwd =1, col =" blue",lty =3)
m_list=lapply(1:10,function(degree){lm(wage ~ poly(age,degree=degree))})
do.call(anova,m_list)
m_list_raw=lapply(1:10,function(degree){lm(wage ~ poly(age,degree=degree,raw=T))})
do.call(what = anova,args = m_list)
summary(m_list[[5]])
summary(m_list[[4]])
summary(m_list[[3]])
summary(m_list_raw[[5]])
summary(m_list_raw[[4]])
summary(m_list_raw[[3]])
plot(m_list[[4]])
# 2
plot(qnorm(ppoints(n = N)),sort(rstandard(lm_4)))
lm_4 <- m_list[[4]]
N <- length(age)
# 1
plot(x=lm_4$fitted.values,y=lm_4$residuals)
# 2
plot(qnorm(ppoints(n = N)),sort(rstandard(lm_4)))
abline(a = 0,b = 1,col="red")
# 3
plot(lm_4$fitted.values,sqrt(abs(rstandard(lm_4))))
# 4
#XX <- model.matrix(lm_4)
#diag(XX%*%solve(t(XX)%*%XX)%*%t(XX)))
plot(hatvalues(lm_4),sqrt(abs(rstandard(lm_4))))
plot(m_list[[4]])
lines(age.grid,preds$fit ,lwd =2, col =" blue")
matlines (age.grid ,se.bands ,lwd =1, col =" blue",lty =3)
preds=predict(m_list[[10]],list(age=age.grid),se=T)
se.bands=cbind(preds$fit +2* preds$se.fit ,preds$fit -2* preds$se.fit)
plot(age ,wage ,xlim=range(age.grid) ,cex =.5, col =" darkgrey ",main='Degree 10 Poly - Fit')
lines(age.grid,preds$fit ,lwd =2, col =" blue")
matlines (age.grid ,se.bands ,lwd =1, col =" blue",lty =3)
m_list_logit=lapply(1:5,function(degree){glm(I(wage>250) ~ poly(age,degree=degree),family='binomial')})
do.call(what = anova, c(list(test="Chisq"), m_list_logit)) # analogof F stat for logistic case
preds=predict(m_list_logit[[4]],list(age=age.grid),se=T)
pfit=exp(preds$fit )/(1+ exp( preds$fit ))  # apply logistic function
# alternativamente usa funzione " function"
se.bands.logit = cbind(preds$fit +2* preds$se.fit , preds$fit -2*
preds$se.fit)
se.bands = exp(se.bands.logit)/(1+ exp(se.bands.logit))  # same for std errors
plot(age ,I(wage >250) ,xlim=range(age.grid) ,type ="n",ylim=c(0 ,.2) )
points (jitter (age), I((wage >250) /5) ,cex =.5, pch ="|",
col =" darkgrey ", main='Poly 4 Fit - Logistic')
lines(age.grid ,pfit ,lwd =2, col =" blue")
matlines (age.grid ,se.bands ,lwd =1, col =" blue",lty =3)
preds=predict(m_list[[4]],list(age=age.grid),se=T)
se.bands=cbind(preds$fit +2* preds$se.fit ,preds$fit -2* preds$se.fit)
plot(age ,wage ,xlim=range(age.grid) ,cex =.5, col =" darkgrey ",main='Degree 4 Poly - Fit')
lines(age.grid,preds$fit ,lwd =2, col =" blue")
matlines (age.grid ,se.bands ,lwd =1, col =" blue",lty =3)
with(Prestige,plot(income,prestige))
with(Prestige,plot(income,prestige))
abline(lm(prestige~income, data=Prestige))
head(Prestige$income)
head(with(Prestige, cut(income,breaks = c(min(income),10000,max(income)))))
head(Prestige$income)
head(with(Prestige, cut(income,breaks = c(min(income),10000,max(income)))))
m_cut=lm(prestige ~ cut(income,breaks = c(-Inf,10000,max(income))), data=Prestige)
broom::tidy(summary(m_cut)) %>%
dplyr::mutate(term=ifelse(term=="(Intercept)",term, "income_cut(1e+04,2.59e+04]")) # all this mess to have a nice name on the summary table
income.grid=with(Prestige, seq(range(income)[1],range(income)[2],by=10))
preds=predict(m_cut,list(income=income.grid),se=T)
se.bands=cbind(preds$fit +2* preds$se.fit ,preds$fit -2* preds$se.fit)
with(Prestige, plot(income ,prestige ,xlim=range(income.grid) ,cex =.5, col =" darkgrey ",main='Custom cut Fit'))
lines(income.grid,preds$fit ,lwd =2, col =" blue")
matlines(income.grid ,se.bands ,lwd =1, col =" blue",lty =3)
c(-Inf,10000,max(income))
income
attach(Prestige)
c(-Inf,10000,max(income))
a = c(-Inf,10000,max(income))
a
uneven_breaks
uneven_breaks <- c(seq(0,10000,by=1000),seq(15000,35000,by=10000))
uneven_breaks
m_cut=lm(prestige ~ cut(income,breaks=uneven_breaks),data = Prestige)
income.grid=with(Prestige, seq(range(income)[1],range(income)[2],by=10))
preds=predict(m_cut,list(income=income.grid),se=T)
se.bands=cbind(preds$fit +2* preds$se.fit ,preds$fit -2* preds$se.fit)
with(Prestige, plot(income ,prestige ,xlim=range(income.grid) ,cex =.5, col =" darkgrey ",main='Custom cut Fit'))
lines(income.grid,preds$fit ,lwd =2, col =" blue")
matlines(income.grid ,se.bands ,lwd =1, col =" blue",lty =3)
abline(v=uneven_breaks,lty=2)
summary(m_cut)
uneven_breaks_2 <- c(seq(0,10000,by=100),seq(15000,35000,by=10000))
m_cut2=lm(prestige ~ cut(income,breaks=uneven_breaks_2),data = Prestige)
summary(m_cut2)
library(HoRM)
attach(Prestige)
regressogram(income, prestige, nbins = 10, show.bins = TRUE,
show.means = TRUE, show.lines = TRUE,
x.lab = "Income", y.lab = "Prestige", main = "Binning Regressogram, 10 bins")
knitr::knit_hooks$set(webgl = hook_webgl)
background-color: lightblue;
library(ISLR2)
library(car)
library(mgcv)
library(rgl)
library(splines)
library(pbapply)
```
with(Prestige, scatterplotMatrix(data.frame(prestige, education, income)))
model_lm=lm(prestige ~ education + income, data=Prestige)
summary(model_lm)
education.grid=seq(range(Prestige$education)[1],range(Prestige$education)[2],length.out = 100)
income.grid=seq(range(Prestige$income)[1],range(Prestige$income)[2],length.out = 100)
grid=expand.grid(education.grid,income.grid)
names(grid)=c('education','income')
pred=predict(model_lm,newdata=grid)
persp3d(education.grid,income.grid,pred,col='blue',border="black",lwd=0.3)
with(Prestige, points3d(education,income,prestige,col='black',size=5))
summary(model_lm_interaction)
model_lm_interaction <- lm(prestige ~ education + income + education:income, data=Prestige)
# model_lm_interaction <- lm(prestige ~ education * income, data=Prestige) # alternatively
summary(model_lm_interaction)
persp3d(education.grid,income.grid,pred_interaction,col='grey30')
&=\beta_{0}+f_{1}\left(x_{i 1}\right)+f_{2}\left(x_{i 2}\right)+\cdots+f_{p}\left(x_{i p}\right)+\epsilon_{i}
``{=tex}
model_gam=gam(prestige ~ s(education,bs='cr') + s(income,bs='cr'),data = Prestige)
summary(model_gam)
hist(model_gam$residuals)
qqnorm(model_gam$residuals)
mu.res <- mean(model_gam$residuals)
s.res <- sd(model_gam$residuals)
x <- as.matrix(model_gam$residuals)
y <- as.matrix( rnorm(length(model_gam$residuals), mu.res, sqrt(s.res)) )
DepthProc::ddPlot(x, y,
depth_params = list(method='Tukey'))
shapiro.test(model_gam$residuals)
lm(prestige ~ ns(education, df = 3) + ns(income, df = 3), data = Prestige)
plot(model_gam_ns$residuals,model_gam$residuals)
lm(prestige ~ ns(education, df = 3) + ns(income, df = 3), data = Prestige)
cor(model_gam_ns$residuals,model_gam$residuals)
lm(prestige ~ ns(education, df = 3) + ns(income, df = 3), data = Prestige)
model_gam_ns <-
lm(prestige ~ ns(education, df = 3) + ns(income, df = 3), data = Prestige)
plot(model_gam_ns$residuals,model_gam$residuals)
cor(model_gam_ns$residuals,model_gam$residuals)
plot(model_gam)
plot(model_gam)
plot(model_gam)
par(mfrow=c(1,2))
plot(model_gam)
gam::plot.Gam(model_gam_ns, se=TRUE)
summary(model_gam_reduced)
model_gam_reduced=gam(prestige ~ education + s(income,bs='cr'),data = Prestige)
summary(model_gam_reduced)
N <- nrow(Prestige)
RSS_reduced <- deviance(model_gam_reduced)
RSS_full <- deviance(model_gam)
df_full <- N-sum(summary(model_gam)$s.table[,2])-1 # -1 for the intercept
df_reduced <- N-sum(summary(model_gam_reduced)$s.table[,2])-2 # -2 for the intercept and the linear contribution of education
df_difference <- df_reduced-df_full
F_value_manual <- ((RSS_reduced-RSS_full)/df_difference)/(RSS_full/summary(model_gam)$residual.df)
pf(F_value_manual, df1 = df_difference,df2 = df_full,lower.tail = FALSE)
anova(model_gam_reduced,model_gam, test = "F")
N <- nrow(Prestige)
RSS_reduced <- deviance(model_gam_reduced)
RSS_full <- deviance(model_gam)
df_full <- N-sum(summary(model_gam)$s.table[,2])-1 # -1 for the intercept
df_reduced <- N-sum(summary(model_gam_reduced)$s.table[,2])-2 # -2 for the intercept and the linear contribution of education
df_difference <- df_reduced-df_full
F_value_manual <- ((RSS_reduced-RSS_full)/df_difference)/(RSS_full/summary(model_gam)$residual.df)
pf(F_value_manual, df1 = df_difference,df2 = df_full,lower.tail = FALSE)
pred_gam=predict(model_gam,newdata=grid)
persp3d(education.grid,income.grid,pred_gam,col='grey30')
with(Prestige,points3d(education,income,prestige,col='black',size=5))
s(income, bs ='cr') +
model_gam_inter = gam(prestige ~ s(education, bs = 'cr') +
s(income, bs ='cr') +
s(I(income * education), bs = 'cr'),
data = Prestige)
model_gam_inter = gam(prestige ~ s(education, bs = 'cr') +
s(income, bs ='cr') +
s(I(income * education), bs = 'cr'),
data = Prestige)
pred_inter = predict(model_gam_inter,
newdata = data.frame(grid, inter = grid$education * grid$income))
persp3d(education.grid, income.grid, pred_inter, col = 'grey30')
with(Prestige,
points3d(education, income, prestige, col = 'black', size = 5))
model_gam_tp = gam(prestige ~ s(education, income, bs="tp", m=2), # m for order
data = Prestige)
pred_tp = predict(model_gam_tp,
newdata = data.frame(grid))
plot(model_gam_tp)
x11()
plot(model_gam_tp)
# come interpretare???
plot(model_gam_tp)
# come interpretare???
plot(model_gam_tp)
graphics.off()
# come interpretare???
plot(model_gam_tp)
knitr::opts_chunk$set(cache = TRUE)
library(rgl)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
knitr::knit_hooks$set(webgl = hook_webgl)
ggplot2::theme_set(ggplot2::theme_bw())
.extracode {
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
library(knitr)
library(broom)
library(tidyr)
lung$ID <- factor(seq(1:nrow(lung)))
lung$status_fact <- factor(lung$status, labels = (c('Censor', 'Event')))
lung_subs <- head(lung)
ggplot(data=lung_subs,aes(x=ID,y=time)) +
geom_bar(stat='identity',width=0.2) +
geom_point(aes(color=status_fact,shape=status_fact),size=6) +
coord_flip()
lung$time
head(lung)
view(lung)
View(lung)
event=lung$status==2) # tell the object which rows have the event
event=lung$status==2) # tell the object which rows have the event
head(Surv(time=lung$time,  # T_i
event=lung$status==2) # tell the object which rows have the event
)
surv(lung$time,lung$status==2)
Surv(lung$time,lung$status==2)
fit <- survfit(Surv(time, status==2) ~ 1, data = lung)
fit
summary(fit)
kable(head(tidy(fit),20))
surv_median(fit)
plot(fit, conf.int = T, xlab='Time [days]', ylab = 'Survival Probability', col='red',
main="Kaplan-Meier Curve for Lung Cancer Survival")
ggsurvplot(fit,
risk.table = TRUE, # Add risk table
risk.table.col = "strata", # Change risk table color by groups
surv.median.line = "hv", # Specify median survival
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=90,
title="Kaplan-Meier Curve for Lung Cancer Survival")
cumulative_incidence <- 1 - fit$surv
ggsurvplot(fit,
risk.table = TRUE, # Add risk table
risk.table.col = "strata", # Change risk table color by groups
surv.median.line = "hv", # Specify median survival
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=90,
fun='event',
title="Cumulative Incidence Curve for Lung Cancer Survival")
ggsurvplot(fit,
risk.table = TRUE, # Add risk table
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=90,
fun='cumhaz',
title="Cumulative Hazard Curve for Lung Cancer Survival")
ggsurvplot(fit.age, conf.int = F, risk.table.col = "strata", legend='none')
fit.age <- survfit(Surv(time, status) ~ age, data=lung)
ggsurvplot(fit.age, conf.int = F, risk.table.col = "strata", legend='none')
hist(lung$age, xlab='Age [years]', main='Histogram of age in Lung Cancer Data')
summary(lung$age)
fit.age <- survfit(Surv(time, status) ~ agecat70, data=lung)
lung$agecat70 <- cut(lung$age, breaks=c(0, 70, Inf), labels=c("young", "old"))
fit.age <- survfit(Surv(time, status) ~ agecat70, data=lung)
ggsurvplot(fit.age, conf.int = T,
risk.table = TRUE, # Add risk table
risk.table.col = "strata", # Change risk table color by groups
surv.median.line = "hv", # Specify median survival
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=90,
legend.labs=c("Young (<= 70)","Old (> 70)"), legend.title="Age class",
palette=c("darkblue","cyan3"),
title="Kaplan-Meier Curves by age class for Lung Cancer Survival")
log_rank_test <- survdiff(Surv(time, status) ~ agecat70, data=lung)
log_rank_test
lung$agecat70 <- cut(lung$age, breaks=c(0, 70, Inf), labels=c("young", "old"))
lung$agecat50 <- cut(lung$age, breaks=c(0, 50, Inf), labels=c("young", "old"))
log_rank_test <- survdiff(Surv(time, status) ~ agecat70, data=lung)
log_rank_test
log_rank_test2 <- survdiff(Surv(time, status) ~ agecat50, data=lung)
log_rank_test2
fit.age <- survfit(Surv(time, status) ~ agecat50, data=lung)
ggsurvplot(fit.age, conf.int = T,
risk.table = TRUE, # Add risk table
risk.table.col = "strata", # Change risk table color by groups
surv.median.line = "hv", # Specify median survival
ggtheme = theme_bw(), # Change ggplot2 theme
break.time.by=90,
legend.labs=c("Young (<= 70)","Old (> 70)"), legend.title="Age class",
palette=c("darkblue","cyan3"),
title="Kaplan-Meier Curves by age class for Lung Cancer Survival")
hazard_ratio <- (log_rank_test$obs[1]/log_rank_test$exp[1])/(log_rank_test$obs[2]/log_rank_test$exp[2])
hazard_ratio
cox.age <- coxph(Surv(time, status) ~ age, data = lung)
cox.age
summary(cox.age)
plot(survfit(cox.age, data=lung),
col="darkorange2", lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Baseline estimated survival probability')
grid()
age_df <- with(lung,
data.frame(age = c(50,65,80) )
)
fit.age <- survfit(cox.age, newdata = age_df)
fit.age
plot(fit.age, conf.int=T,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
grid()
legend('topright', c("Age = 50", "Age = 65", "Age = 80"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
plot(survfit(cox.age, data=lung),
col="darkorange2", lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Baseline estimated survival probability')
grid()
plot(fit.age, conf.int=T,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
grid()
legend('topright', c("Age = 50", "Age = 65", "Age = 80"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
glimpse(lung)
lung$sex <- ifelse(lung$sex==1,'Male','Female')
lung$sex <- as.factor(lung$sex)
lung
mod.cox <- coxph(Surv(time, status) ~ age + sex + ph.karno + wt.loss, data =  lung)
summary(mod.cox)
ggforest(mod.cox, data=lung)
grid()
plot(survfit(mod.cox, data=lung),
col="darkorange2", lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Baseline estimated survival probability')
grid()
plot(predict(mod.cox), residuals(mod.cox, type='martingale'),
xlab='Fitted values', ylab='Martingale residuals', main='Residual Plot', las=1)
# Add a line for residual=0
abline(h=0, col='red')
# Fit a smoother for the points
lines(smooth.spline(predict(mod.cox), residuals(mod.cox, type='martingale')), col='blue')
ggcoxdiagnostics(mod.cox, type = "deviance")
ggcoxdiagnostics(mod.cox, type = "schoenfeld")
sex.km <- survfit(Surv(time, status) ~ sex, data = lung[!is.na(lung$wt.loss) & !is.na(lung$ph.karno),])
plot(sex.km, fun='cloglog',
col=c("deeppink2","dodgerblue2"), lwd=2, lty=1,
ylab="log(-log(Survival Probability))")
grid()
legend('topleft', c("Female", "Male"),
lty=c(1,1), lwd=c(2,2), col=c("deeppink2","dodgerblue2"))
```
test.ph <- cox.zph(mod.cox)
test.ph
ggcoxdiagnostics(mod.cox, type = "scaledsch")
par(mfrow=c(2,2))
for(i in 1:4){
plot(test.ph[i])
abline(h=0, col='red')
}
ggcoxdiagnostics(mod.cox, type = "scaledsch")
summary(mod.cox.strata)
mod.cox.strata <- coxph(Surv(time, status) ~ age + sex + strata(ph.karno) + wt.loss, data =  lung)
summary(mod.cox.strata)
test.ph.strata <- cox.zph(mod.cox.strata)
test.ph.strata
?strata
?knots
test.ph <- cox.zph(mod.cox)
test.ph
mod.cox.strata <- coxph(Surv(time, status) ~ age + sex + strata(ph.karno) + wt.loss, data =  lung)
summary(mod.cox.strata)
plot(survfit(mod.cox.strata, data=lung),
plot(survfit(mod.cox.strata, data=lung),
col="darkorange2", lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Baseline estimated survival probability')
grid()
plot(survfit(mod.cox.strata, data=lung),
col="darkorange2", lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Baseline estimated survival probability')
grid()
library(readxl)
data <- read_excel("../Dataset/Data_Satellites.xlsx", col_names = TRUE)
setwd("C:/Users/alessandro/Documents/GitHub/NPS_project/Code")
library(readxl)
data <- read_excel("../Dataset/Data_Satellites.xlsx", col_names = TRUE)
View(data)
paesi <- data$Country
paesi
continent <- c("America", "Europe", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "Europe", "America", "America", "Multinational", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "Europe", "America", "America", "America", "Europe", "Europe", "America", "Europe", "Europe", "South America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "Europe", "America", "Europe", "Sweden", "Multinational", "America", "America", "Europe", "America", "Europe", "America", "America", "America", "Europe", "Asia", "Europe", "America", "America", "America", "America", "Multinational", "Multinational", "America", "Europe", "Europe", "America", "America", "America", "America", "America", "America", "America", "Asia", "Australia", "America", "America", "America", "America", "America", "Multinational", "Multinational", "America", "America", "America", "America", "Europe", "Asia", "America", "America", "Europe", "America", "Asia", "America", "Multinational", "Multinational", "America", "Multinational", "Asia", "Europe", "America", "Multinational", "America", "Multinational", "America", "America", "Multinational", "Multinational", "Multinational", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "South America", "America", "Asia", "Multinational", "Multinational", "Multinational", "Europe", "America", "America", "America", "America", "Europe", "Europe", "America", "America", "America", "America", "America", "Europe", "Asia", "Africa", "Multinational", "Asia", "America", "America", "Asia", "Multinational", "Europe", "Asia", "America", "America", "Asia", "America", "Asia", "Asia", "Asia", "Asia", "America", "Asia", "Europe", "Asia", "Europe", "America", "America", "Europe", "Asia", "America", "Asia", "Multinational", "South America", "America", "America", "Europe", "Asia", "America", "Multinational", "America", "America", "Asia", "Europe", "America", "America", "America", "Europe", "Europe", "Europe", "Europe", "America", "Europe", "Asia", "Asia", "Europe", "Europe", "Asia", "Asia", "Asia", "Europe", "Asia", "Asia", "America", "Europe", "Multinational", "America", "Asia", "Asia", "Asia", "America", "Asia", "Europe", "Europe", "Asia", "Europe", "Asia", "Multinational", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "Asia", "Asia", "America", "Asia", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "America", "America")
"America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "Europe", "America", "America", "Multinational", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "Europe", "America", "America", "America", "Europe", "Europe", "America", "Europe", "Europe", "South America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "Europe", "America", "Europe", "Sweden", "Multinational", "America", "America", "Europe", "America", "Europe", "America", "America", "America", "Europe", "Asia", "Europe", "America", "America", "America", "America", "Multinational", "Multinational", "America", "Europe", "Europe", "America", "America", "America", "America", "America", "America", "America", "Middle East", "Australia", "America", "America", "America", "America", "America", "Multinational", "Multinational", "America", "America", "America", "America", "Europe", "Asia", "America", "America", "Europe", "America", "Asia", "America", "Multinational", "Multinational", "America", "Multinational", "Asia", "Europe", "America", "Multinational", "America", "Multinational", "America", "America", "Multinational", "Multinational", "Multinational", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "South America", "America", "Asia", "Multinational", "Multinational", "Multinational", "Europe", "America", "America", "America", "America", "Europe", "Europe", "America", "America", "America", "America", "America", "Europe", "Asia", "Africa", "Multinational", "Asia", "America", "America", "Asia", "Multinational", "Europe", "Asia", "America", "America", "Asia", "America", "Asia", "Asia", "Asia", "Asia", "America", "Asia", "Europe", "Asia", "Europe", "America", "America", "Europe", "Asia", "America", "Asia", "Multinational", "South America", "America", "America", "Europe", "Asia", "America", "Multinational", "America", "America", "Asia", "Europe", "America", "America", "America", "Europe", "Europe", "Europe", "Europe", "America", "Europe", "Asia", "Asia", "Europe", "Europe", "Asia", "Asia", "Asia", "Europe", "Asia", "Asia", "America", "Europe", "Multinational", "America", "Asia", "Asia", "Asia", "America", "Asia", "Europe", "Europe", "Asia", "Europe", "Asia", "Multinational", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "Asia", "Asia", "America", "Asia", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "America", "America", "America", "America", "America", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Russia", "America", "Europe", "Europe", "Europe", "United Kingdom", "America", "Asia", "America"
cont <-  c("America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "Europe", "America", "America", "Multinational", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "America", "America", "Europe", "America", "America", "America", "Europe", "Europe", "America", "Europe", "Europe", "South America", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "America", "Europe", "America", "Europe", "Sweden", "Multinational", "America", "America", "Europe", "America", "Europe", "America", "America", "America", "Europe", "Asia", "Europe", "America", "America", "America", "America", "Multinational", "Multinational", "America", "Europe", "Europe", "America", "America", "America", "America", "America", "America", "America", "Middle East", "Australia", "America", "America", "America", "America", "America", "Multinational", "Multinational", "America", "America", "America", "America", "Europe", "Asia", "America", "America", "Europe", "America", "Asia", "America", "Multinational", "Multinational", "America", "Multinational", "Asia", "Europe", "America", "Multinational", "America", "Multinational", "America", "America", "Multinational", "Multinational", "Multinational", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "South America", "America", "Asia", "Multinational", "Multinational", "Multinational", "Europe", "America", "America", "America", "America", "Europe", "Europe", "America", "America", "America", "America", "America", "Europe", "Asia", "Africa", "Multinational", "Asia", "America", "America", "Asia", "Multinational", "Europe", "Asia", "America", "America", "Asia", "America", "Asia", "Asia", "Asia", "Asia", "America", "Asia", "Europe", "Asia", "Europe", "America", "America", "Europe", "Asia", "America", "Asia", "Multinational", "South America", "America", "America", "Europe", "Asia", "America", "Multinational", "America", "America", "Asia", "Europe", "America", "America", "America", "Europe", "Europe", "Europe", "Europe", "America", "Europe", "Asia", "Asia", "Europe", "Europe", "Asia", "Asia", "Asia", "Europe", "Asia", "Asia", "America", "Europe", "Multinational", "America", "Asia", "Asia", "Asia", "America", "Asia", "Europe", "Europe", "Asia", "Europe", "Asia", "Multinational", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Europe", "America", "Europe", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "Asia", "Asia", "America", "Asia", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "America", "America", "America", "America", "America", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "America", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Asia", "Russia", "America", "Europe", "Europe", "Europe", "United Kingdom", "America", "
Asia", "America")
library(countrycode)
install.packages("countrycode")
library(countrycode)
dataframe_paesi <- data.frame(paese = paesi)
dataframe_paesi$continente <- countrycode(sourcevar = dataframe_paesi$paese, origin = "iso2c", destination = "continent")
View(dataframe_paesi)
class(paesi)
dataframe_paesi$continente <- countrycode(sourcevar = dataframe_paesi$paese, origin = "iso2c", destination = "continent", custom_match = data.frame(iso2c = c("NonEsistente"), continent = c("NA")))
paesi <- c("USA", "United Kingdom", "France", "China", "India")
dataframe_paesi <- data.frame(paese = paesi)
dataframe_paesi$continente <- countrycode(sourcevar = dataframe_paesi$paese, origin = "iso2c", destination = "continent")
